Noname manuscript No.
(will be inserted by the editor)

Visual Genome
Connecting Language and Vision Using Crowdsourced Dense Image Annotations

Ranjay Krishna · Yuke Zhu · Oliver Groth · Justin Johnson
· Kenji Hata · Joshua Kravitz · Stephanie Chen · Yannis Kalantidis
· Li-Jia Li · David A. Shamma · Michael S. Bernstein · Li Fei-Fei

6
1
0
2

b
e
F
3
2

]

V
C
.
s
c
[

1
v
2
3
3
7
0
.
2
0
6
1
:
v
i
X
r
a

Received: date / Accepted: date

Abstract Despite progress in perceptual tasks such as
image classiﬁcation, computers still perform poorly on
cognitive tasks such as image description and question
answering. Cognition is core to tasks that involve not
just recognizing, but reasoning about our visual world.
However, models used to tackle the rich content in im-
ages for cognitive tasks are still being trained using the
same datasets designed for perceptual tasks. To achieve
success at cognitive tasks, models need to understand
the interactions and relationships between objects in

Ranjay Krishna
Stanford University, Stanford, CA, USA
E-mail: ranjaykrishna@cs.stanford.edu

Yuke Zhu
Stanford University, Stanford, CA, USA

Oliver Groth
Dresden University of Technology, Dresden, Germany

Justin Johnson
Stanford University, Stanford, CA, USA

Kenji Hata
Stanford University, Stanford, CA, USA

Joshua Kravitz
Stanford University, Stanford, CA, USA

Stephanie Chen
Stanford University, Stanford, CA, USA

Yannis Kalantidis
Yahoo Inc., San Francisco, CA, USA

Li-Jia Li
Snapchat Inc., Los Angeles, CA, USA

David A. Shamma
Yahoo Inc., San Francisco, CA, USA

Michael S. Bernstein
Stanford University, Stanford, CA, USA

Li Fei-Fei
Stanford University, Stanford, CA, USA

an image. When asked “What vehicle is the person rid-
ing?”, computers will need to identify the objects in
an image as well as the relationships riding(man, car-
riage) and pulling(horse, carriage) in order to answer
correctly that “the person is riding a horse-drawn car-
riage.”

In this paper, we present the Visual Genome dataset
to enable the modeling of such relationships. We collect
dense annotations of objects, attributes, and relation-
ships within each image to learn these models. Speciﬁ-
cally, our dataset contains over 100K images where each
image has an average of 21 objects, 18 attributes, and
18 pairwise relationships between objects. We canoni-
calize the objects, attributes, relationships, and noun
phrases in region descriptions and questions answer
pairs to WordNet synsets. Together, these annotations
represent the densest and largest dataset of image de-
scriptions, objects, attributes, relationships, and ques-
tion answers.

Keywords Computer Vision · Dataset · Image · Scene
Graph · Question Answering · Objects · Attributes ·
Relationships · Knowledge · Language · Crowdsourcing

1 Introduction

A holy grail of computer vision is the complete un-
derstanding of visual scenes: a model that is able to
name and detect objects, describe their attributes, and
recognize their relationships and interactions. Under-
standing scenes would enable important applications
such as image search, question answering, and robotic
interactions. Much progress has been made in recent
including image classiﬁca-
years towards this goal,
tion (Deng et al., 2009, Perronnin et al., 2010, Simonyan
and Zisserman, 2014, Krizhevsky et al., 2012, Szegedy

 
 
 
 
 
 
2

Ranjay Krishna et al.

Fig. 1: An overview of the data needed to move from perceptual awareness to cognitive understanding of images.
We present a dataset of images densely annotated with numerous region descriptions, objects, attributes, and
relationships. Region descriptions (e.g. “girl feeding large elephant” and “a man taking a picture behind girl”) are
shown (top). The objects (e.g. elephant), attributes (e.g. large) and relationships (e.g. feeding) are shown
(bottom). Our dataset also contains image related question answer pairs (not shown).

et al., 2014) and object detection (Everingham et al.,
2010, Girshick et al., 2014, Sermanet et al., 2013, Gir-
shick, 2015, Ren et al., 2015b). An important contribut-
ing factor is the availability of a large amount of data
that drives the statistical models that underpin today’s
advances in computational visual understanding. While
the progress is exciting, we are still far from reaching
the goal of comprehensive scene understanding. As Fig-
ure 1 shows, existing models would be able to detect dis-
creet objects in a photo but would not be able to explain
their interactions or the relationships between them.
Such explanations tend to be cognitive in nature, inte-
grating perceptual information into conclusions about
the relationships between objects in a scene (Bruner,
1990, Firestone and Scholl, 2015). A cognitive under-
standing of our visual world thus requires that we com-
plement computers’ ability to detect objects with abil-
ities to describe those objects (Isola et al., 2015) and

understand their interactions within a scene (Sadeghi
and Farhadi, 2011).

There is an increasing eﬀort to put together the
next generation of datasets to serve as training and
benchmarking datasets for these deeper, cognitive scene
understanding and reasoning tasks, the most notable
being MS-COCO (Lin et al., 2014) and VQA (Antol
et al., 2015). The MS-COCO dataset consists of 300K
real-world photos collected from Flickr. For each im-
age, there is pixel-level segmentation of 91 object classes
(when present) and 5 independent, user-generated sen-
tences describing the scene. VQA adds to this a set of
614K question-answer pairs related to the visual con-
tents of each image (see more details in Section 3.1).
With this information, MS-COCO and VQA provide
a fertile training and testing ground for models aimed
at tasks for accurate object detection, segmentation,
and summary-level image captioning (Kiros et al., 2014,

Visual Genome

3

Mao et al., 2014, Karpathy and Fei-Fei, 2014, Vinyals
et al., 2014) as well as basic QA (Ren et al., 2015a, An-
tol et al., 2015, Malinowski et al., 2015, Gao et al.,
2015, Malinowski and Fritz, 2014). For example, a state-
of-the-art model (Karpathy and Fei-Fei, 2014) provides
a description of one MS-COCO image in Figure 1 as
“two men are standing next to an elephant.” But what
is missing is the further understanding of where each
object is, what each person is doing, what the relation-
ship between the person and elephant is, etc. Without
such relationships, these models fail to diﬀerentiate this
image from other images of people next to elephants.

To understand images thoroughly, we believe three
key elements need to be added to existing datasets: a
grounding of visual concepts to language (Kiros
et al., 2014), a more complete set of descriptions
and QAs for each image based on multiple image re-
gions (Johnson et al., 2015), and a formalized rep-
resentation of the components of an image (Hayes,
1978). In the spirit of mapping out this complete in-
formation of the visual world, we introduce the Visual
Genome dataset. The ﬁrst release of the Visual Genome
dataset uses 108, 249 images from the intersection of the
YFCC100M (Thomee et al., 2016) and MS-COCO (Lin
et al., 2014). Section 5 provides a more detailed descrip-
tion of the dataset. We highlight below the motivation
and contributions of the three key elements that set
Visual Genome apart from existing datasets.

The Visual Genome dataset regards relationships
and attributes as ﬁrst-class citizens of the annotation
space, in addition to the traditional focus on objects.
Recognition of relationships and attributes is an impor-
tant part of the complete understanding of the visual
scene, and in many cases, these elements are key to the
story of a scene (e.g., the diﬀerence between “a dog
chasing a man” versus “a man chasing a dog”). The
Visual Genome dataset is among the ﬁrst to provide a
detailed labeling of object interactions and attributes,
grounding visual concepts to language1.

An image is often a rich scenery that cannot be fully
described in one summarizing sentence. The scene in
Figure 1 contains multiple “stories”: “a man taking a
photo of elephants,” “a woman feeding an elephant,”
“a river in the background of lush grounds,” etc. Ex-
isting datasets such as Flickr 30K (Young et al., 2014)
and MS-COCO (Lin et al., 2014) focus on high-level de-
scriptions of an image2. Instead, for each image in the
Visual Genome dataset, we collect more than 42 de-
scriptions for diﬀerent regions in the image, providing
a much denser and complete set of descriptions of
the scene. In addition, inspired by VQA (Antol et al.,

1 The Lotus Hill Dataset (Yao et al., 2007) also provides a

similar annotation of object relationships, see Sec 3.1.

2015), we also collect an average of 17 question-answer
pairs based on the descriptions for each image. Region-
based question answers can be used to jointly develop
NLP and vision models that can answer questions from
either the description or the image, or both of them.

With a set of dense descriptions of an image and
the explicit correspondences between visual pixels (i.e.
bounding boxes of objects) and textual descriptors (i.e.
relationships, attributes), the Visual Genome dataset
is poised to be the ﬁrst image dataset that is capa-
ble of providing a structured formalized representa-
tion of an image, in the form that is widely used in
knowledge base representations in NLP (Zhou et al.,
2007, GuoDong et al., 2005, Culotta and Sorensen,
2004, Socher et al., 2012). For example, in Figure 1,
we can formally express the relationship holding be-
tween the woman and food as holding(woman, food)).
Putting together all the objects and relations in a scene,
we can represent each image as a scene graph (Johnson
et al., 2015). The scene graph representation has been
shown to improve semantic image retrieval (Johnson
et al., 2015, Schuster et al., 2015) and image caption-
ing (Farhadi et al., 2009, Chang et al., 2014, Gupta
and Davis, 2008). Furthermore, all objects, attributes
and relationships in each image in the Visual Genome
dataset are canonicalized to its corresponding Word-
Net (Miller, 1995) ID (called a synset ID). This map-
ping connects all images in Visual Genome and provides
an eﬀective way to consistently query the same concept
(object, attribute, or relationship) in the dataset. It can
also potentially help train models that can learn from
contextual information from multiple images.

In this paper, we introduce the Visual Genome
dataset with the aim of training and benchmarking
the next generation of computer models for compre-
hensive scene understanding. The paper proceeds as
follows: In Section 2, we provide a detailed description
of each component of the dataset. Section 3 provides a
literature review of related datasets as well as related
recognition tasks. Section 4 discusses the crowdsourcing
strategies we deployed in the ongoing eﬀort of collecting
this dataset. Section 5 is a collection of data analysis
statistics, showcasing the key properties of the Visual
Genome dataset. Last but not least, Section 6 provides
a set of experimental results that use Visual Genome
as a benchmark.

Further visualizations, API, and additional infor-
mation on the Visual Genome dataset can be found
online3.

2 COCO has multiple sentences generated independently
by diﬀerent users, all focusing on providing an overall, one
sentence description of the scene.

3 https://visualgenome.org

4

Ranjay Krishna et al.

Fig. 2: An example image from the Visual Genome dataset. We show 3 region descriptions and their corresponding
region graphs. We also show the connected scene graph collected by combining all of the image’s region graphs.
The top region description is “a man and a woman sit on a park bench along a river.” It contains the objects: man,
woman, bench and river. The relationships that connect these objects are: sits on(man, bench), in front of (man,
river ), and sits on(woman, bench).

The man is almost baldPark bench is made of gray weathered woodA man and a woman sit on a park bench along a river.Visual Genome

5

Fig. 3: An example image from our dataset along with its scene graph representation. The scene graph contains
objects (child, instructor, helmet, etc.) that are localized in the image as bounding boxes (not shown).
These objects also have attributes: large, green, behind, etc. Finally, objects are connected to each other
through relationships: wears(child, helmet), wears(instructor, jacket), etc.

6

Ranjay Krishna et al.

Fig. 4: A representation of the Visual Genome dataset. Each image contains region descriptions that describe a
localized portion of the image. We collect two types of question answer pairs (QAs): freeform QAs and region-based
QAs. Each region is converted to a region graph representation of objects, attributes, and pairwise relationships.
Finally, each of these region graphs are combined to form a scene graph with all the objects grounded to the image.
Best viewed in color

QuestionsRegion DescriptionsRegion GraphsScene GraphLegend: objectsrelationshipsattributesfire hydrantyellowfire hydrantmanwomanstandingjumping overmanshortsinis behindfire hydrantmanjumping overwomanstandingshortsinis behindyellowwoman in shorts is standing behind the manyellow fire hydrant Q.What is the woman standing next to? A.Her belongings.Q.What color is the fire hydrant?A.Yellow.man jumping over fire hydrantRegion Based Question AnswersFree Form Question AnswersVisual Genome

7

2 Visual Genome Data Representation

The Visual Genome dataset consists of seven main com-
ponents: region descriptions, objects, attributes, rela-
tionships, region graphs, scene graphs, and question-
answer pairs. Figure 4 shows examples of each compo-
nent for one image. To enable research on comprehen-
sive understanding of images, we begin by collecting
descriptions and question answers. These are raw texts
without any restrictions on length or vocabulary. Next,
we extract objects, attributes and relationships from
our descriptions. Together, objects, attributes and re-
lationships fabricate our scene graphs that represent a
formal representation of an image. In this section, we
break down Figure 4 and explain each of the seven com-
ponents. In Section 4, we will describe in more detail
how data from each component is collected through a
crowdsourcing platform.

2.1 Multiple regions and their descriptions

In a real-world image, one simple summary sentence is
often insuﬃcient to describe all the contents of and in-
teractions in an image. Instead, one natural way to ex-
tend this might be a collection of descriptions based on
diﬀerent regions of a scene. In Visual Genome, we col-
lect human-generated image region descriptions, with
each region localized by a bounding box. In Figure 5,
we show three examples of region descriptions. Regions
are allowed to have a high degree of overlap with each
other when the descriptions diﬀer. For example, “yellow
ﬁre hydrant” and “woman in shorts is standing behind
the man” have very little overlap, while “man jumping
over ﬁre hydrant” has a very high overlap with the other
two regions. Our dataset contains on average a total of
42 region descriptions per image. Each description is a
phrase ranging from 1 to 16 words in length describing
that region.

2.2 Multiple objects and their bounding boxes

Each image in our dataset consists of an avarege of 21
objects, each delineated by a tight bounding box (Fig-
ure 6). Furthermore, each object is canonicalized to a
synset ID in WordNet (Miller, 1995). For example, man
and person would get mapped to man.n.03 (the
generic use of the word to refer to any
human being). Similarly, person gets mapped
to person.n.01 (a human being). Afterwards,
these two concepts can be joined to person.n.01
since this is a hypernym of man.n.03. This is an
standardization step to avoid multiple
important

Fig. 5: To describe all the contents of and interactions
in an image, the Visual Genome dataset includes mul-
tiple human-generated image regions descriptions, with
each region localized by a bounding box. Here, we show
three regions descriptions: “man jumping over a ﬁre hy-
drant,” “yellow ﬁre hydrant,” and “woman in shorts is
standing beghind the man.”

names for one object (e.g. man, person, human), and
to connect information across images.

2.3 A set of attributes

Each image in Visual Genome has an average of
16 attributes. Objects can have zero or more at-
tributes associated with them. Attributes can be color
(yellow), states (standing), etc. (Figure 7). Just
like we extract objects from region descriptions, we
also extract the attributes attached to these objects.
In Figure 7, from the phrase “yellow ﬁre hydrant,” we
extract the attribute yellow for the fire hydrant.
As with objects, we canonicalize all attributes to Word-
Net (Miller, 1995); for example, yellow is mapped to
yellow.s.01 (of the color intermediate
between green and orange in the color
spectrum; of something resembling the
color of an egg yolk).

2.4 A set of relationships

Relationships connect two objects together. These re-
lationships can be actions (jumping over), spa-
tial (is behind), verbs (wear), prepositions (with),

8

Ranjay Krishna et al.

Fig. 6: From all of the region descriptions, we extract
all objects mentioned. For example, from the region de-
scription “man jumping over a ﬁre hydrant,” we extract
man and fire hydrant.

Fig. 7: Some descriptions also provide attributes for ob-
jects. For example, the region description “yellow ﬁre
hydrant” adds that the fire hydrant is yellow.
Here we show two attributes: yellow and standing.

Fig. 8: Our dataset also captures the relationships and
interactions between objects in our images. In this ex-
ample, we show the relationship jumping over be-
tween the objects man and fire hydrant.

over on the object fire hydrant. Each relation-
ship is canonicalized to a WordNet (Miller, 1995)
synset ID; i.e. jumping is canonicalized to jump.a.1
(move forward by leaps and bounds). On av-
erage, each image in our dataset contains 18 relation-
ships.

2.5 A set of region graphs

Combining the objects, attributes, and relationships ex-
tracted from region descriptions, we create a directed
graph representation for each of the 42 regions. Exam-
ples of region graphs are shown in Figure 4. Each region
graph is a structured representation of a part of the
image. The nodes in the graph represent objects, at-
tributes, and relationships. Objects are linked to their
respective attributes while relationships link one object
to another. The links connecting two objects in Figure 4
point from the subject to the relationship and from the
relationship to the other object.

comparative (taller than), or prepositional phrases
(drive on). For example, from the region description
“man jumping over ﬁre hydrant,” we extract the re-
lationship jumping over between the objects man
and fire hydrant (Figure 8). These relationships
are directed from one object, called the subject, to an-
other, called the object. In this case, the subject is
the man, who is performing the relationship jumping

2.6 One scene graph

While region graphs are localized representations of an
image, we also combine them into a single scene graph
representing the entire image (Figure 3). The scene
graph is the union of all region graphs and contains
all objects, attributes, and relationships from each re-
gion description. By doing so, we are able to combine

Visual Genome

9

multiple levels of scene information in a more coherent
way. For example in Figure 4, the leftmost region de-
scription tells us that the “ﬁre hydrant is yellow,” while
the middle region description tells us that the “man is
jumping over the ﬁre hydrant.” Together, the two de-
scriptions tell us that the “man is jumping over a yellow
ﬁre hydrant.”

2.7 A set of question answer pairs

We have two types of QA pairs associated with each im-
age in our dataset: freeform QAs, based on the entire
image, and region-based QAs, based on selected regions
of the image. We collect 6 diﬀerent types of questions
per image: what, where, how, when, who, and why.
In Figure 4, “Q. What is the woman standing next to?;
A. Her belongings” is a freeform QA. Each image has
at least one question of each type listed above. Region-
based QAs are collected by prompting workers with re-
gion descriptions. For example, we use the region “yel-
low ﬁre hydrant” to collect the region-based QA: “Q.
What color is the ﬁre hydrant?; A. Yellow.” Region
based QAs allow us to independently study methods
that use NLP and vision priors to answer questions.

3 Related Work

We discuss existing datasets that have been released
and used by the vision community for classiﬁcation and
object detection. We also mention work that has im-
proved object and attribute detection models. Then, we
explore existing work that has utilized representations
similar to our relationships between objects. In addi-
tion, we dive into literature related to cognitive tasks
like image description, question answering, and knowl-
edge representation.

3.1 Datasets

Datasets (Table 1) have been growing in size as re-
searchers have begun tackling increasingly complicated
problems. Caltech 101 (Fei-Fei et al., 2007) was one
of the ﬁrst datasets hand-curated for image classiﬁca-
tion, with 101 object categories and 15-30 of examples
per category. One of the biggest criticisms of Caltech
101 was the lack of variability in its examples. Caltech
256 (Griﬃn et al., 2007) increased the number of cate-
gories to 256, while also addressing some of the short-
comings of Caltech 101. However, it still had only a
handful of examples per category, and most of its im-
ages contained only a single object. LabelMe (Russell

et al., 2008) introduced a dataset with multiple ob-
jects per category. They also provided a web interface
that experts and novices could use to annotate addi-
tional images. This web interface enabled images to be
labeled with polygons, helping create datasets for im-
age segmentation. The Lotus Hill dataset (Yao et al.,
2007) contains a hierarchical decomposition of objects
(vehicles, man-made objects, animals, etc.) along with
segmentations. Only a small part of this dataset is
freely available. SUN (Xiao et al., 2010), just like
LabelMe (Russell et al., 2008) and Lotus Hill (Yao
et al., 2007), was curated for object detection. Push-
ing the size of datasets even further, 80 Million Tiny
Images (Torralba et al., 2008) created a signiﬁcantly
larger dataset than its predecessors. It contains tiny (i.e.
32 × 32 pixels) images that were collected using Word-
Net (Miller, 1995) synsets as queries. However, because
the data in 80 Million Images were not human-veriﬁed,
they contain numerous errors. YFCC100M (Thomee
et al., 2016) is another large database of 100 million
images that is still largely unexplored. It contains hu-
man generated and machine generated tags.

Pascal VOC (Everingham et al., 2010) pushed re-
search from classiﬁcation to object detection with a
dataset containing 20 semantic categories in 11, 000
images. Imagenet (Deng et al., 2009) took WordNet
synsets and crowdsourced a large dataset of 14 mil-
lion images. They started the ILSVRC (Russakovsky
et al., 2015) challenge for a variety of computer vision
tasks. ILSVRC and PASCAL provide a test bench for
object detection, image classiﬁcation, object segmen-
tation, person layout, and action classiﬁcation. MS-
COCO (Lin et al., 2014) recently released its dataset,
with over 328, 000 images with sentence descriptions
and segmentations of 91 object categories. The cur-
rent largest dataset for QA, VQA (Antol et al., 2015),
contains 204, 721 images annotated with one or more
question answers. They collected a dataset of 614, 163
freeform questions with 6.1M ground truth answers and
provided a baseline approach in answering questions us-
ing an image and a textual question as the input.

Visual Genome aims to bridge the gap between all
these datasets, collecting not just annotations for a
large number of objects but also scene graphs, region
descriptions, and question answer pairs for image re-
gions. Unlike previous datasets, which were collected
for a single task like image classiﬁcation, the Visual
Genome dataset was collected to be a general-purpose
representation of the visual world, without bias toward
a particular task. Our images contain an average of 21
objects, which is almost an order of magnitude more
dense than any existing vision dataset. Similarly, we
contain an average of 18 attributes and 18 relationships

10

Ranjay Krishna et al.

a
n
n
o
t
a
t
i
o
n
s

p
e
r

i

m
a
g
e
.

a
n
s
w
e
r
s
.

I
t

a
l
s
o

h
a
s

a

m
o
r
e

d
i
v
e
r
s
e

s
e
t

o
f

o
b
j
e
c
t
,

a
t
t
r
i

b
u
t
e
,

a
n
d

r
e
l
a
t
i
o
n
s
h

i

p

c
l
a
s
s
e
s
.

A
d
d
i
t
i
o
n
a
l
l
y
,

V
i
s
u
a
l

G
e
n
o
m
e

c
o
n
t
a
i
n
s

a

h
i
g
h
e
r

d
e
n
s
i
t
y

o
f

t
h
e
s
e

T
a
b
l
e

1
:

A
c
o
m
p
a
r
i
s
o
n

o
f

e
x
i
s
t
i
n
g

d
a
t
a
s
e
t
s
w
i
t
h
V
i
s
u
a
l

G
e
n
o
m
e
.

W

e

s
h
o
w
t
h
a
t
V
i
s
u
a
l

G
e
n
o
m
e

h
a
s

a
n

o
r
d
e
r

o
f

m
a
g
n
i
t
u
d
e
m
o
r
e

d
e
s
c
r
i
p
t
i
o
n
s

a
n
d

q
u
e
s
t
i
o
n

V
i
s
u
a
l

G
e
n
o
m
e

V
Q
A
(
A
n
t
o
l

e
t

a
l
.
,

2
0
1
5
)

B
a
i
d
u

(
G
a
o

e
t

a
l
.
,

2
0
1
5
)

C
O
C
O
Q
A
(
R
e
n

e
t

a
l
.
,

2
0
1
5
a
)

C
a
l
t
e
c
h

2
5
6

(
G
r
i

ﬃ
n

e
t

a
l
.
,

2
0
0
7
)

C
a
l
t
e
c
h

1
0
1

(
F
e
i
-
F
e
i

e
t

a
l
.
,

2
0
0
7
)

F

l
i
c
k
r

3
0
K
(
Y
o
u
n
g

e
t

a
l
.
,

2
0
1
4
)

a
P
a
s
c
a
l

(
F
a
r
h
a
d
i

e
t

a
l
.
,

2
0
0
9
)

C
a
l
t
e
c
h
B
i
r
d
s

(

W
a
h

e
t

a
l
.
,

2
0
1
1
)

S
U
N
A
t
t
r
i
b
u
t
e
s

(
P
a
t
t
e
r
s
o
n

e
t

a
l
.
,

2
0
1
4
)

A
n
i
m
a
l

A
t
t
r
i
b
u
t
e
s

(
L
a
m
p
e
r
t

e
t

a
l
.
,

2
0
0
9
)

C
a
l
t
e
c
h

P
e
d
e
s
t
r
i
a
n

(
D
o
l
l
a
r

e
t

a
l
.
,

2
0
1
2
)

A
b
s
t
r
a
c
t

S
c
e
n
e
s

(
Z
i
t
n
i
c
k

a
n
d

P
a
r
i
k
h
,

2
0
1
3
)

P
a
s
c
a
l

D
e
t
e
c
t
i
o
n

(
E
v
e
r
i
n
g
h
a
m
e
t

a
l
.
,

2
0
1
0
)

V
i
s
k
e

(
S
a
d
e
g
h
i

e
t

a
l
.
,

2
0
1
5
)

D
A
Q
U
A
R
(

M
a
l
i
n
o
w
s
k
i

a
n
d

F
r
i
t
z
,

2
0
1
4
)

V
i
s
u
a
l

P
h
r
a
s
e
s

(
S
a
d
e
g
h
i

a
n
d

F
a
r
h
a
d
i
,

2
0
1
1
)

C
O
C
O
A
c
t
i
o
n
s

(
R
u
g
g
e
r
o
R
o
n
c
h
i

a
n
d

P
e
r
o
n
a
,

2
0
1
5
)

M
S
-
C
O
C
O
(
R
u
g
g
e
r
o
R
o
n
c
h
i

a
n
d

P
e
r
o
n
a
,

2
0
1
5
)

I
L
S
V
R
C
D
e
t
e
c
t
i
o
n

(
2
0
1
2
)

(
R
u
s
s
a
k
o
v
s
k
y

e
t

a
l
.
,

2
0
1
5
)

1
0
8
,
0
0
0

2
0
4
,
7
2
1

1
2
0
,
3
6
0

1
2
3
,
2
8
7

1
,
4
4
9

1
0
,
0
0
0

1
1
,
7
8
8

1
4
,
0
0
0

3
0
,
0
0
0

1
2
,
0
0
0

1
0
,
0
2
0

1
1
,
5
3
0

2
5
0
,
0
0
0

3
0
,
6
0
8

9
,
1
4
4

3
0
,
0
0
0

3
2
8
,
0
0
0

4
7
6
,
6
8
8

-

-

I

m
a
g
e
N
e
t

(
D
e
n
g

e
t

a
l
.
,

2
0
0
9
)

T
i
n
y

I

m
a
g
e
s

(
T
o
r
r
a
l
b
a

e
t

a
l
.
,

2
0
0
8
)

Y
F
C
C
1
0
0
M

(
T
h
o
m
e
e

e
t

a
l
.
,

2
0
1
6
)

1
4
,
1
9
7
,
1
2
2

8
0
,
0
0
0
,
0
0
0

1
0
0
,
0
0
0
,
0
0
0

5
0

4
,
1
0
2
,
8
1
8

7
6
,
3
4
0

1
6

1
5
,
6
2
6

1
6

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

5

5

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

2
7
,
4
5
0

3
5
0
,
0
0
0

3
0
,
6
0
8

9
,
1
4
4

5
8

-

2
7
,
4
7
2

5
3
4
,
3
0
9

-

-

-

-

-

-

-

-

-

-

-

1
1

2
0

1

2
5
7

1
0
2

9
1

-

2
0
0

1
4
,
1
9
7
,
1
2
2

-

-

2
1
,
8
4
1

5
3
,
4
6
4

-

-

-

-

-

-

-

-

-

-

-

-

2
.
3
8

1
.
4

5

1

1

-

-

2
.
5

1

1

-

-

-

-

-

-

-

-

3
1
2

7
0
0

1
,
2
8
0

6
4

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

3
1
2

7
0
0

-

-

-

-

-

-

-

-

-

-

-

-

-

4
7

-

-

-

-

6
5
0
0

1
7

1
4
0

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

1
8

1
,
7
7
3
,
2
5
8

-

-

-

-

-

1

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

6
1
4
,
1
6
3

2
5
0
,
5
6
9

1
1
7
,
6
8
4

1
2
,
4
6
8

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

-

I

m
a
g
e
s

p
e
r

I

m
a
g
e

O
b
j
e
c
t
s

C
a
t
e
g
o
r
i
e
s

p
e
r

I

m
a
g
e

C
a
t
e
g
o
r
i
e
s

p
e
r

I

m
a
g
e

C
a
t
e
g
o
r
i
e
s

p
e
r

I

m
a
g
e

A
n
s
w
e
r
s

D
e
s
c
r
i
p
t
i
o
n
s

T
o
t
a
l

#
O
b
j
e
c
t

O
b
j
e
c
t
s

#
A
t
t
r
i
b
u
t
e
s

A
t
t
r
i
b
u
t
e
s

#
R
e
l
a
t
i
o
n
s
h
i
p

R
e
l
a
t
i
o
n
s
h
i
p
s

Q
u
e
s
t
i
o
n

Visual Genome

11

per image. We also have an order of magnitude more
unique objects, attributes, and relationships than any
other dataset. Finally, we have 1.7 million question an-
swer pairs, also larger than any other dataset for visual
question answering.

3.2 Image Descriptions

One of the core contributions of Visual Genome is its
descriptions for multiple regions in an image. As such,
we mention other image description datasets and mod-
els in this subsection. Most work related to describing
images can be divided into two categories: retrieval of
human-generated captions and generation of novel cap-
tions. Methods in the ﬁrst category use similarity met-
rics between image features from predeﬁned models to
retrieve similar sentences (Ordonez et al., 2011, Hodosh
et al., 2013). Other methods map both sentences and
their images to a common vector space (Ordonez et al.,
2011) or map them to a space of triples (Farhadi et al.,
2010). Among those in the second category, a common
theme has been to use recurrent neural networks to
produce novel captions (Kiros et al., 2014, Mao et al.,
2014, Karpathy and Fei-Fei, 2014, Vinyals et al., 2014).
More recently, researchers have also used a visual at-
tention model (Xu et al., 2015).

One drawback of these approaches is their attention
to describing only the most salient aspect of the im-
age. This problem is ampliﬁed by datasets like Flickr
30K (Young et al., 2014) and MS-COCO (Lin et al.,
2014), whose sentence desriptions tend to focus, some-
what redundantly, on these salient parts. For example,
“an elephant is seen wandering around on a sunny day,”
“a large elephant in a tall grass ﬁeld,” and “a very large
elephant standing alone in some brush” are 3 descrip-
tions from the MS-COCO dataset, and all of them fo-
cus on the salient elephant in the image and ignore the
other regions in the image. Many real-world scenes are
complex, with multiple objects and interactions that
are best described using multiple descriptions (Karpa-
thy and Fei-Fei, 2014, Lebret et al., 2015). Our dataset
pushes toward a complete understanding of an image
by collecting a dataset in which we capture not just
scene-level descriptions but also myriad of low-level de-
scriptions, the “grammar” of the scene.

by self-driving cars on the road. It involves classify-
ing an object into a semantic category and localizing
the object in the image. Visual Genome uses objects
as a core component on which each visual scene is
built. Early datasets include the face detectio (Huang
et al., 2008) and pedestrian datasets (Dollar et al.,
2012). The PASCAL VOC and ILSVRC’s detection
dataset (Deng et al., 2009) pushed research in object de-
tection. But the images in these datasets are iconic and
do not capture the settings in which these objects usu-
ally co-occur. To remedy this problem, MS-COCO (Lin
et al., 2014) annotated real-world scenes that capture
object contexts. However, MS-COCO was unable to de-
scribe all the objects in its images, since they annotated
only 91 object categories. In the real world, there are
many more objects that the ones captured by existing
datasets. Visual Genome aims at collecting annotations
for all visual elements that occur in images, increasing
the number of semantic categories to over 17,000.

3.4 Attributes

The inclusion of attributes allows us to describe, com-
pare, and more easily categorize objects. Even if we
haven’t seen an object before, attributes allow us to in-
fer something about it; for example, “yellow and brown
spotted with long neck” likely refers to a giraﬀe. Ini-
tial work in this area involved ﬁnding objects with
similar features (Malisiewicz et al., 2008) using ex-
amplar SVMs. Next, textures were used to study ob-
jects (Varma and Zisserman, 2005), while other meth-
ods learned to predict colors (Ferrari and Zisserman,
2007). Finally, the study of attributes was explicitly
demonstrated to lead to improvements in object classiﬁ-
cation (Farhadi et al., 2009). Attributes were deﬁned to
be paths (“has legs”), shapes (“spherical”), or materials
(“furry”) and could be used to classify new categories of
objects. Attributes have also played a large role in im-
proving ﬁne-grained recognition (Goering et al., 2014)
on ﬁne-grained attribute datasets like CUB-2011 (Wah
et al., 2011). In Visual Genome, we use a generalized
formulation (Johnson et al., 2015), but we extend it
such that attributes are not image-speciﬁc binaries but
rather object-speciﬁc for each object in a real-world
scene. We also extend the types of attributes to in-
clude size (“small”), pose (“bent”), state (“transpar-
ent”), emotion (“happy”), and many more.

3.3 Objects

3.5 Relationships

Object detection is a fundamental task in computer vi-
sion, with applications ranging from identiﬁcation of
faces in photo software to identiﬁcation of other cars

Relationship extraction has been a traditional problem
in information extraction and in natural language pro-
cessing. Syntactic features (Zhou et al., 2007, GuoDong

12

Ranjay Krishna et al.

et al., 2005), dependency tree methods (Culotta and
Sorensen, 2004, Bunescu and Mooney, 2005), and deep
neural networks (Socher et al., 2012, Zeng et al., 2014)
have been employed to extract relationships between
two entities in a sentence. However, in computer vi-
sion, very little work has gone into learning or pre-
dicting relationships. Instead, relationships have been
implicitly used to improve other vision tasks. Relative
layouts between objects have improved scene catego-
rization (Izadinia et al., 2014), and 3D spatial geome-
try between objects has helped object detection (Choi
et al., 2013). Comparative adjectives and prepositions
between pairs of objects have been used to model visual
relationships and improved object localization (Gupta
and Davis, 2008).

Relationships have already shown their utility in
improving cognitive tasks. A meaning space of rela-
tionships has improved the mapping of images to sen-
tences (Farhadi et al., 2010). Relationships in a struc-
tured representation with objects have been deﬁned
as a graph structure called a scene graph, where the
nodes are objects with attributes and edges are rela-
tionships between objects. This representation can be
used to generate indoor images from sentences and also
to improve image search (Chang et al., 2014, Johnson
et al., 2015). We use a similar scene graph representa-
tion of an image that generalizes across all these pre-
vious works (Johnson et al., 2015). Recently, relation-
ships have come into focus again in the form of question
answering about associations between objects (Sadeghi
et al., 2015). These questions ask if a relationship, in-
volving generally two objects, is true, e.g. “do dogs eat
ice cream?”. We believe that relationships will be nec-
essary for higher-level cognitive tasks (Johnson et al.,
2015, Lu et al., 2016), so we collect the largest corpus
of them in an attempt to improve tasks by actually un-
derstanding relationships between objects.

3.6 Question Answering

Visual question answering (QA) has been recently pro-
posed as a proxy task of evaluating a computer vision
system’s ability to understand an image beyond object
recognition (Geman et al., 2015, Malinowski and Fritz,
2014). Several visual QA benchmarks have been pro-
posed in the last few months. The DAQUAR (Mali-
nowski and Fritz, 2014) dataset was the ﬁrst toy-sized
QA benchmark built upon indoor scene RGB-D im-
ages of NYU Depth v2 (Nathan Silberman and Fergus,
2012). Most new datasets (Yu et al., 2015, Ren et al.,
2015a, Antol et al., 2015, Gao et al., 2015) have col-
lected QA pairs on MS-COCO images, either generated

automatically by NLP tools (Ren et al., 2015a) or writ-
ten by human workers (Yu et al., 2015, Antol et al.,
2015, Gao et al., 2015).

In previous datasets, most questions concentrated
on simple recognition-based questions about the salient
objects, and answers were often extremely short. For
instance, 90% of DAQUAR answers (Malinowski and
Fritz, 2014) and 87% of VQA answers (Antol et al.,
2015) consist of single-word object names, attributes,
and quantities. This shortness limits their diversity and
fails to capture the long-tail details of the images. Given
the availability of new datasets, an array of visual QA
models have been proposed to tackle QA tasks. The
proposed models range from SVM classiﬁers (Antol
et al., 2015) and probabilistic inference (Malinowski
and Fritz, 2014) to recurrent neural networks (Gao
et al., 2015, Malinowski et al., 2015, Ren et al., 2015a)
and convolutional networks (Ma et al., 2015). Visual
Genome aims to capture the details of the images with
diverse question types and long answers. These ques-
tions should cover a wide range of visual tasks from ba-
sic perception to complex reasoning. Our QA dataset
of 1.7 million QAs is also larger than any currently ex-
isting dataset.

3.7 Knowledge Representation

A knowledge representation of the visual world is ca-
pable of tackling an array of vision tasks, from action
recognition to general question answering. However, it
is diﬃcult to answer “what is the minimal viable set
of knowledge needed to understand about the physi-
cal world?” (Hayes, 1978). It was later proposed that
there be a certain plurality to concepts and their re-
lated axioms (Hayes, 1985). These eﬀorts have grown to
model physical processes (Forbus, 1984) or to model a
series of actions as scripts (Schank and Abelson, 2013)
for stories—both of which are not depicted in a sin-
gle static image but which play roles in an image’s
story. More recently, NELL (Betteridge et al., 2009)
learns probabilistic horn clauses by extracting informa-
tion from the web. DeepQA (Ferrucci et al., 2010) pro-
poses a probabilistic question answering architecture in-
volving over 100 diﬀerent techniques. Others have used
Markov logic networks (Zhu et al., 2009, Niu et al.,
2012) as their representation to perform statistical in-
ference for knowledge base construction. Our work is
most similar to that of those (Chen et al., 2013, Zhu
et al., 2014, Zhu et al., 2015, Sadeghi et al., 2015) who
attempt to learn common-sense relationships from im-
ages. Visual Genome scene graphs can also be consid-
ered a dense knowledge representation for images. It is
similar to the format used in knowledge bases in NLP.

Visual Genome

13

4 Crowdsourcing Strategies

4.2 Region Descriptions

Visual Genome was collected and veriﬁed entirely by
crowd workers from Amazon Mechanical Turk. In this
section, we outline the pipeline employed in creating all
the components of the dataset. Each component (region
descriptions, objects, attributes, relationships, region
graphs, scene graphs, questions and answers) involved
multiple task stages. We mention the diﬀerent strate-
gies used to make our data accurate and to enforce di-
versity in each component. We also provide background
information about the workers who helped make Visual
Genome possible.

4.1 Crowd Workers

We used Amazon Mechanical Turk (AMT) as our pri-
mary source of annotations. Overall, a total of over
33, 000 unique workers contributed to the dataset. The
dataset was collected over the course of 6 months after
15 months of experimentation and iteration on the data
representation. Approximately 800, 000 Human Intelli-
gence Tasks (HITs) were launched on AMT, where each
HIT involved creating descriptions, questions and an-
swers, or region graphs. Each HIT was designed such
that workers manage to earn anywhere between $6-$8
per hour if they work continuously, in line with ethical
research standards on Mechanical Turk (Salehi et al.,
2015). Visual Genome HITs achieved a 94.1% retention
rate, meaning that 94.1% of workers who completed one
of our tasks went ahead to do more. Table 2 outlines the
percentage distribution of the locations of the workers.
93.02% of workers contributed from the United States.

Country

Distribution

United States
Philippines
Kenya
India
Russia
Canada
(Others)

93.02%
1.29%
1.13%
0.94%
0.50%
0.47%
2.65%

Visual Genome’s main goal
is to enable the study
of cognitive computer vision tasks. The next step to-
wards understanding images requires studying relation-
ships between objects in scene graph representations
of images. However, we observed that collecting scene
graphs directly from an image leads to workers annotat-
ing easy, frequently-occurring relationships like wear-
ing(man, shirt) instead of focusing on salient parts of
the image. This is evident from previous datasets (John-
son et al., 2015, Lu et al., 2016) that contain a large
number of such relationships. After experimentation,
we observed that when asked to describe an image using
natural language, crowd workers naturally start with
the most salient part of the image and then move to
describing other parts of the image one by one. Inspired
by this ﬁnding, we focused our attention towards col-
lecting a dataset of region descriptions that is diverse
in content.

When a new image is added to the crowdsourcing
pipeline with no annotations, it is sent to a worker who
is asked to draw three bounding boxes and write three
descriptions for the region enclosed by each box. Next,
the image is sent to another worker along with the pre-
viously written descriptions. Workers are explicitly en-
couraged to write descriptions that have not been writ-
ten before. This process is repeated until we have col-
lect 50 region descriptions for each image. To prevent
workers from having to skim through a long list of pre-
viously written descriptions, we only show them the
top seven most similar descriptions. We calculate these
most similar descriptions using BLEU (Papineni et al.,
2002) (n-gram) scores between pairs of sentences. We
deﬁne the BLEU score between a description di and a
previous description dj to be:

BLEUN (di, dj) = b(di, dj) exp(

1
N

N
(cid:88)

n=1

log pn(di, dj)) (1)

where we enforce a brevity penalty using:

Table 2: Geographic distribution of countries from
where crowd workers contributed to Visual Genome.

b(di, dj) =

(cid:40) 1

len(dj )
len(di)

e1−

if len(di) > len(dj)

otherwise

(2)

Figures 9 (a) and (b) outline the demographic dis-
tribution of our crowd workers. The majority of our
workers were between the ages of 25 and 34 years old.
Our youngest contributor was 18 years old and the old-
est was 68 years old. We also had a near-balanced split
of 54.15% male and 45.85% female workers.

and pn calculates the percentage of n-grams in di that
match n-grams in dj.

When a worker writes a new description, we pro-
grammatically enforce that it has not been repeated by
using BLEU score thresholds set to 0.7 to ensure that it
is dissimilar to descriptions from both of the following
two lists:

14

Ranjay Krishna et al.

(a)

(b)

Fig. 9: (a) Age and (b) gender distribution of Visual Genome’s crowd workers.

Fig. 10: Good (left) and bad (right) bounding boxes for
the phrase “a street with a red car parked on the side,”
judged on coverage.

1. Image-speciﬁc descriptions. A list of all previ-

ously written descriptions for that image.

2. Global image descriptions. A list of the top 100
most common written descriptions of all images in
the dataset. This prevents very common phrases like
“sky is blue” from dominating the set of region de-
scriptions.

Finally, we ask workers to draw bounding boxes that
satisfy one requirement: coverage. The bounding box
must cover all objects mentioned in the description.
Figure 10 shows an example of a good box that cov-
ers both the street as well the car mentioned in the
description, as well as an example of a bad box.

4.3 Objects

Once 50 region descriptions are collected for an im-
age, we extract the visual objects from each descrip-
tion. Each description is sent to one crowd worker,
who extracts all the objects from the description and
grounds each object as a bounding box in the image.
For example, from Figure 4, let’s consider the descrip-
tion “woman in shorts is standing behind the man.” A
worker would extract three objects: woman, shorts,
and man. They would then draw a box around each of

Fig. 11: Good (left) and bad (right) bounding boxes for
the object fox, judged on both coverage as well as
quality.

.

the objects. We require each bounding box to be drawn
to satisfy two requirements: coverage and quality.
Coverage has the same deﬁnition as described above
in Section 4.2, where we ask workers to make sure that
the bounding box covers the object completely (Fig-
ure 11). Quality requires that each bounding box be
as tight as possible around its object such that if the
box’s length or height were decreased by one pixel, it
would no longer satisfy the coverage requirement. Since
a one pixel error can be physically impossible for most
workers, we relax the deﬁnition of quality to four pixels.
Multiple descriptions for an image might refer to
the same object, sometimes with diﬀerent words. For
example, a man in one description might be referred to
as person in another description. We can thus use this
crowdsourcing stage to build these co-reference chains.
With each region description given to a worker to pro-
cess, we include a list of previously extracted objects
as suggestions. This allows a worker to choose a previ-
ously drawn box annotated as man instead of redrawing
a new box for person.

Finally, to increase the speed with which workers
complete this task, we also use Stanford’s dependency
parser (Manning et al., 2014) to extract nouns auto-
matically and send them to the workers as suggestions.

Visual Genome

15

While the parser manages to ﬁnd most of the nouns, it
sometimes misses compound nouns, so we avoided com-
pletely depending on this automated method. By com-
bining the parser with crowdsourcing tasks, we were
able to speed up our object extraction process without
losing accuracy.

4.4 Attributes, Relationships, and Region Graphs

Once all objects have been extracted from each region
description, we can extract the attributes and relation-
ships described in the region. We present each worker
with a region description along with its extracted ob-
jects and ask them to add attributes to objects or to
connect pairs of objects with relationships, based on the
text of the description. From the description “woman in
shorts is standing behind the man”, workers will extract
the attribute standing for the woman and the rela-
tionships in(woman, shorts) and behind (woman, man).
Together, objects, attributes, and relationships form
the region graph for a region description. Some descrip-
tions like “it is a sunny day” do not contain any objects
and therefore have no region graphs associated with
them. Workers are asked to not generate any graphs for
such descriptions. We create scene graphs by combining
all the region graphs for an image by combining all the
co-referenced objects from diﬀerent region graphs.

4.5 Scene Graphs

The scene graph is the union of all region graphs
extracted from region descriptions. We merge nodes
from region graphs that correspond to the same object;
for example, man and person in two diﬀerent region
graphs might refer to the same object in the image.
We say that objects from diﬀerent graphs refer to the
same object if their bounding boxes have an overlap
over union of 0.8. However, this heuristic might contain
false positives. So, before merging two objects, we ask
workers to conﬁrm that a pair of objects with signiﬁ-
cant overlap are indeed the same object. For example,
in Figure 12 (right), the fox might be extracted from
two diﬀerent region descriptions. These boxes are then
combined together (Figure 12 (left)) when construct-
ing the scene graph. Two region graphs are combined
together by merging objects that are co-referenced by
both the graphs.

4.6 Questions and Answers

To create question answer (QA) pairs, we ask the AMT
workers to write pairs of questions and answers about

Fig. 12: Each object (fox) has only one bounding box
referring to it (left). Multiple boxes drawn for the same
object (right) are combined together if they have a min-
imum threshold of 0.9 intersection over union.

.

an image. To ensure quality, we instruct the workers to
follow three rules: 1) start the questions with one of the
“seven Ws” (who, what, where, when, why, how and
which); 2) avoid ambiguous and speculative questions;
3) be precise and unique, and relate the question to the
image such that it is clearly answerable if and only if
the image is shown.

We collected two separate types of QAs: freeform
QAs and region-based QAs. In freeform QA, we ask a
worker to look at an image and write eight QA pairs
about it. To encourage diversity, we enforce that work-
ers write at least three diﬀerent Ws out of the seven in
their eight pairs. In region-based QA, we ask the work-
ers to write a pair based on a given region. We select
the regions that have large areas (more than 5k pixels)
and long phrases (more than 4 words). This enables us
to collect around twenty region-based pairs at the same
cost of the eight freeform QAs. In general, freeform QA
tends to yield more diverse QA pairs that enrich the
question distribution; region-based QA tends to pro-
duce more factual QA pairs at a lower cost.

4.7 Veriﬁcation

All Visual Genome data go through a veriﬁcation stage
as soon as they are annotated. This stage helps elim-
inate incorrectly labeled objects, attributes, and rela-
tionships. It also helps remove region descriptions and
questions and answers that might be correct but are
vague (“This person seems to enjoy the sun.”), subjec-
tive (“room looks dirty”), or opinionated (“Being ex-
posed to hot sun like this may cause cancer”).

Veriﬁcation is conducted using two separate strate-
gies: majority voting (Snow et al., 2008) and rapid judg-
ments (Krishna et al., 2016). All components of the
dataset except objects are veriﬁed using majority vot-
ing. Majority voting (Snow et al., 2008) involves three
unique workers looking at each annotation and vot-

16

Ranjay Krishna et al.

ing on whether it is factually correct. An annotation
is added to our dataset if at least two (a majority) out
of the three workers verify that it is correct.

We only use rapid judgments to speed up the veri-
ﬁcation of the objects in our dataset. Meanwhile, rapid
judgments (Krishna et al., 2016) use an interface in-
spired by rapid serial visual processing that enable ver-
iﬁcation of objects with an order of magnitude increase
in speed than majority voting.

4.8 Canonicalization

All the descriptions and QAs that we collect are
freeform worker-generated texts. They are not con-
strained by any limitations. For example, we do not
force workers to refer to a man in the image as a
man. We allow them to choose to refer to the man
as person, boy, man, etc. This ambiguity makes
instances of man from our
it diﬃcult to collect all
dataset. In order to reduce the ambiguity in the con-
cepts of our dataset and connect it to other resources
used by the research community, we map all objects,
attributes, relationships, and noun phrases in region
descriptions and QAs to synsets in WordNet (Miller,
1995). In the example above, person, boy, and man
would map to the synsets: person.n.01 (a human
being), male child.n.01 (a youthful male
person) and man.n.03 (the generic use of
the word to refer to any human being)
respectively. Thanks to the WordNet hierarchy it
is now possible to fuse those three expressions of
into person.n.01 (a human
the same concept
being) since this is the lowest common ancestor node
of all aforementioned synsets.

We use the Stanford NLP tools (Manning et al.,
2014) to extract the noun phrases from the region
descriptions and QAs. Next, we map them to their
most frequent matching synset in WordNet according
to WordNet lexeme counts. We then reﬁne this simple
heuristic by hand-crafting mapping rules for the 30
most common failure cases. For example according to
WordNet’s lexeme counts the most common seman-
tic for “table” is table.n.01 (a set of data
arranged in rows and columns). However
in
our data it is more likely to see pieces of furniture and
therefore bias the mapping towards table.n.02 (a
piece of furniture having a smooth flat
top that is usually supported by one or
more vertical legs). The objects in our scene
graphs are already noun phrases and are mapped to
WordNet in the same way.

We normalize each attribute based on morphology
(so called “stemming”) and map them to the WordNet

adjectives. We include 15 hand-crafted rules to address
common failure cases, which typically occur when
the concrete or spatial sense of the word seen in an
image is not the most common overall sense. For
example, the synset long.a.02 (of relatively
great or greater than average spatial
extension) is
long.a.01 (indicating a relatively
great or greater than average duration
of time), even though instances of the word “long”
in our images are much more likely to refer to that
spatial sense.

less common in WordNet

than

For relationships, we ignore all prepositions as they
are not recognized by WordNet. Since the meanings
of verbs are highly dependent upon their morphology
and syntactic placement (e.g. passive cases, prepo-
sitional phrases), we try to ﬁnd WordNet synsets
whose sentence frames match with the context of
the relationship. Sentence frames in WordNet are
formalized syntactic frames in which a certain sense
of a word might appear; for example, play.v.01:
participate in games or sport occurs in the
sentence frames “Somebody [play]s” and “Somebody
[play]s something.” For each verb-synset pair, we
then consider the root hypernym of that synset to
reduce potential noise from WordNet’s ﬁne-grained
sense distinctions. The WordNet hierarchy for verbs
from over 100 root
is
verbs. For example, draw.v.01: cause to move
by pulling traces back to the root hypernym
move.v.02: cause to move or shift into
draw.v.02: get or
a new position, while
derive traces to the root get.v.01: come into
the possession of something concrete or
abstract. We also include 20 hand-mapped rules,
again to correct for WordNet’s lower representation of
concrete or spatial senses.

segmented and originates

These mappings are not perfect and still contain
some ambiguity. Therefore, we send all our mappings
along with the top four alternative synsets for each term
to Amazon Mechanical Turk. We ask workers to verify
that our mapping was accurate and change the map-
ping to an alternative one if it was a better ﬁt. We
present workers with the concept we want to canonical-
ize along with our proposed corresponding synset with
4 additional options. To prevent workers from always
defaulting to the our proposed synset, we do not ex-
plicitly specify which one of the 5 synsets presented is
our proposed synset. Section 5.8 provides experimen-
tal precision and recall scores for our canonicalization
strategy.

Visual Genome

17

Fig. 13: A distribution of the top 25 image synsets in
the Visual Genome dataset. A variety of synsets are
well represented in the dataset, with the top 25 synsets
having at least 800 example images each.

(a)

(b)

5 Dataset Statistics and Analysis

In this section, we provide statistical insights and anal-
ysis for each component of Visual Genome. Speciﬁcally,
we examine the distribution of images (Section 5.1) and
the collected data for region descriptions (Section 5)
and questions and answers (Section 5.7). We analyze
region graphs and scene graphs together in one sec-
tion (Section 5.6), but we also break up these graph
structures into their three constituent parts—objects
(Section 5.3), attributes (Section 5.4), and relationships
(Section 5.5)—and study each part individually. Fi-
nally, we describe our canonicalization pipeline and re-
sults (Section 5.8).

Fig. 14: (a) An example image from the dataset with
its region descriptions. We only display localizations for
6 of the 42 descriptions to avoid clutter; all 50 descrip-
tions do have corresponding bounding boxes. (b) All 42
region bounding boxes visualized on the image.

5.1 Image Selection

The Visual Genome dataset consists of all 108, 249 im-
ages from the intersection of MS-COCO’s (Lin et al.,
2014) 328, 000 images and YFCC’s (Thomee et al.,
2016) 100 million images. These images are real-world,
non-iconic images that were uploaded onto Flickr by
users. The images range from as small as 72 pixels wide
to as large as 1280 pixels wide, with an average width

Girl feeding elephantMan taking pictureHuts on a hillsideA man taking a picture.Flip flops on the groundHillside with water belowElephants interacting with peopleYoung girl in glasses with backpackElephant that could carry peopleAn elephant trunk taking two bananas.A bush next to a river.People watching elephants eatingA woman wearing glasses.A bagGlasses on the hair.The elephant with a seat on topA woman with a purple dress.A pair of pink flip flops.A handle of bananas.Tree near the waterA blue short.Small houses on the hillsideA woman feeding an elephantA woman wearing a white shirt and shortsA man taking a pictureA man wearing an orange shirtAn elephant taking food from a womanA woman wearing a brown shirtA woman wearing purple clothesA man wearing blue flip flopsMan taking a photo of the elephantsBlue flip flop sandalsThe girl's white and black handbagThe girl is feeding the elephantThe nearby riverA woman wearing a brown t shirtElephant's trunk grabbing the foodThe lady wearing a purple outfitA young Asian woman wearing glassesElephants trunk being touched by a handA man taking a picture holding a cameraElephant with carrier on it's backWoman with sunglasses on her headA body of waterSmall buildings surrounded by treesWoman wearing a purple dressTwo people near elephantsA man wearing a hatA woman wearing glassesLeaves on the ground18

Ranjay Krishna et al.

(a)

(b)

Fig. 15: (a) A distribution of the width of the bounding box of a region description normalized by the image width.
(b) A distribution of the height of the bounding box of a region description normalized by the image height.

Fig. 16: A distribution of the number of words in a
region description. The average number of words in a
region description is 5, with shortest descriptions of 1
word and longest descriptions of 16 words.

of 500 pixels. We collected the WordNet synsets into
which our 108, 249 images can be categorized using the
same method as ImageNet (Deng et al., 2009). Visual
Genome images cover 972 synsets. Figure 13 shows the
top synsets to which our images belong. “ski” is the
most common synset, with 2612 images; it is followed
by “ballplayer” and “racket,” with all three synsets re-
ferring to images of people playing sports. Our dataset
is somewhat biased towards images of people, as Fig-
ure 13 shows; however, they are quite diverse overall,
as the top 25 synsets each have over 800 images, while
the top 50 synsets each have over 500 examples.

5.2 Region Description Statistics

One of the primary components of Visual Genome is
its region descriptions. Every image includes an aver-

Fig. 17: The process used to convert a region description
into a 300-dimensional vectorized representation.

age of 42 regions with a bounding box and a descrip-
tive phrase. Figure 14 shows an example image from
our dataset with its 50 region descriptions. We display
bounding boxes for only 6 out of the 50 descriptions in
the ﬁgure to avoid clutter. These descriptions tend to
be highly diverse and can focus on a single object, like
in “A bag,” or on multiple objects, like in “Man taking
a photo of the elephants.” They encompass the most
salient parts of the image, as in “An elephant taking
food from a woman,” while also capturing the back-
ground, as in “Small buildings surrounded by trees.”

MS-COCO (Lin et al., 2014) dataset is good at
generating variations on a single scene-level descriptor.
Consider three sentences from MS-COCO dataset on a
similar image: “there is a person petting a very large
elephant,” “a person touching an elephant in front of
a wall,” and “a man in white shirt petting the cheek
of an elephant.” These three sentences are single scene-
level descriptions. In comparison, Visual Genome de-
scriptions emphasize diﬀerent regions in the image and

Visual Genome

19

thus are less semantically similar. To ensure diversity
in the descriptions, we use BLEU score (Papineni et al.,
2002) thresholds between new descriptions and all pre-
viously written descriptions. More information about
crowdsourcing can be found in Section 4.

Region descriptions must be speciﬁc enough in an
image to describe individual objects, like in the descrip-
tion “A bag,” but they must also be general enough to
describe high-level concepts in an image, like “An man
being chased by a bear.” Qualitatively, we note that
regions that cover large portions of the image tend to
be general descriptions of an image, while regions that
cover only a small fraction of the image tend to be more
speciﬁc. In Figure 15 (a), we show the distribution of
regions over the width of the region normalized by the
width of the image. We see that the majority of our
regions tend to be around 10% to 15% of the image
width. We also note that there are a large number of re-
gions covering 100% of the image width. These regions
usually include elements like “sky,” “ocean,” “snow,”
“mountains,” etc. that cannot be bounded and thus
span the entire image width. In Figure 15 (b), we show
a similar distribution over the normalized height of the
region. We see a similar overall pattern, as most of our
regions tend to be very speciﬁc descriptions of about
10% to 15% of the image height. Unlike the distribu-
tion over width, however, we do not see a increase in
the number of regions that span the entire height of the
image, as there are no common visual equivalents that
span images vertically. Out of all the descriptions gath-
ered, only one or two of them tend to be global scene
descriptions that are similar to MS-COCO (Lin et al.,
2014).

After examining the distribution of the size of the
regions described, it is also valuable to look at the se-
mantic information captured by these descriptions. In
Figure 16, we show the distribution of the length (word
count) of these region descriptions. The average word
count for a description is 5 words, with a minimum of
1 word and a maximum of 12 words. In Figure 18 (a),
we plot the most common phrases occurring in our re-
gion descriptions, with stop words removed. Common
visual elements like “green grass,” “tree [in] distance,”
and “blue sky” occur much more often than other, more
nuanced elements like “fresh strawberry.” We also study
descriptions with ﬁner precision in Figure 18 (b), where
we plot the most common words used in descriptions.
Again, we eliminate stop words from our study. Colors
like “white” and “black” are the most frequently used
words to describe visual concepts; we conduct a sim-
ilar study on other captioning datasets including MS-
COCO (Lin et al., 2014) and Flickr 30K (Young et al.,
2014) and ﬁnd a similar distribution with colors occur-

ring most frequently. Besides colors, we also see frequent
occurrences of common objects like “man,” “tree,” and
“sign” and of universal visual elements like “sky.”

Semantic diversity. We also study the actual semantic
contents of the descriptions. We use an unsupervised
approach to analyze the semantics of these descriptions.
Speciﬁcally, we use word2vec (Mikolov et al., 2013) to
convert each word in a description to a 300-dimensional
vector. Next, we remove stop words and average the
remaining words to get a vector representation of the
whole region description. This pipeline is outlined in
Figure 17. We use hierarchical agglomerative clustering
on vector representations of each region description and
ﬁnd 71 semantic and syntactic groupings or “clusters.”
Figure 19 (a) shows four such example clusters. One
cluster contains all descriptions related to tennis, like
“A man swings the racquet” and “White lines on the
ground of the tennis court,” while another cluster con-
tains descriptions related to numbers, like “Three dogs
on the street” and “Two people inside the tent.” To
quantitatively measure the diversity of Visual Genome’s
region descriptions, we calculate the number of clusters
represented in a single image’s region descriptions. We
show the distribution of the variety of descriptions for
an image in Figure 19 (b). We ﬁnd that on average, each
image contains descriptions from 17 diﬀerent clusters.
The image with the least diverse descriptions contains
descriptions from 4 clusters, while the image with the
most diverse descriptions contains descriptions from 26
clusters.

Finally, we also compare the descriptions in Visual
Genome to the captions in MS-COCO. First we ag-
gregate all Visual Genome and MS-COCO descriptions
and remove all stop words. After removing stop words,
the descriptions from both datasets are roughly the
same length. We conduct a similar study, in which we
vectorize the descriptions for each image and calculate
each dataset’s cluster diversity per image. We ﬁnd that
on average, 2 clusters are represented in the captions
for each image in MS-COCO, with very few images in
which 5 clusters are represented. Because each image in
MS-COCO only contains 5 captions, it is not a fair com-
parison to compare the number of clusters represented
in all the region descriptions in the Visual Genome
dataset. We thus randomly sample 5 Visual Genome re-
gion descriptions per image and calculate the number
of clusters in an image. We ﬁnd that Visual Genome
descriptions come from 4 or 5 clusters. We show our
comparison results in Figure 19 (c). The diﬀerence be-
tween the semantic diversity between the two datasets
is statistically signiﬁcant (t = −240, p < 0.01).

20

Ranjay Krishna et al.

(a)

(b)

Fig. 18: (a) A plot of the most common visual concepts or phrases that occur in region descriptions. The most
common phrases refer to universal visual concepts like “blue sky,” “green grass,” etc. (b) A plot of the most
frequently used words in region descriptions. Colors occur the most frequently, followed by common objects like
“man” and “dog” and universal visual concepts like “sky.”

Visual Genome

21

(a)

(b)

(c)

Fig. 19: (a) Example illustration showing four clusters of region descriptions and their overall themes. Other
clusters not shown due to limited space. (b) Distribution of images over number of clusters represented in each
image’s region descriptions. (c) We take Visual Genome with 5 random descriptions taken from each image and
MS-COCO dataset with all 5 sentence descriptions per image and compare how many clusters are represented in
the descriptions. We show that Visual Genome’s descriptions are more varied for a given image, with an average
of 4 clusters per image, while MS-COCO’s images have an average of 3 clusters per image.

Numbers ClusterTwo people inside the tent.Many animals crossing the road.Five ducks almost in a row.The number four.Three dogs on the street.Two towels hanging on racks.Tennis ClusterWhite lines on the ground of the tennis court.A pair of tennis shoes.Metal fence securing the tennis court.Navy blue shorts on tennis player.The man swings the racquet.Tennis player preparing a backhand swing.Ocean ClusterOcean is blue and calm.Rows of waves in front of surfer.A group of men on a boat.Surfboard on the beach.Woman is surfing in the ocean.Foam on water’s edge.Transportation ClusterLadder folded on fire truck.Dragon design on the motorcycle.Tall windshield on bike.Front wheels of the airplane.A bus rear view mirror.The front tire of the police car.22

Ranjay Krishna et al.

(a)

(b)

Fig. 20: (a) Distribution of the number of objects per
region. Most regions have between 0 and 2 objects. (b)
Distribution of the number of objects per image. Most
images contain between 15 and 20 objects.

5.3 Object Statistics

In comparison to related datasets, Visual Genome fares
well in terms of object density and diversity. Visual
Genome contains approximately 21 objects per image,
exceeding ImageNet (Deng et al., 2009), PASCAL (Ev-
eringham et al., 2010), MS-COCO (Lin et al., 2014),
and other datasets by large margins. As shown in Fig-
ure 21, there are more object categories represented in
Visual Genome than in any other dataset. This com-
parison is especially pertinent with regards to Microsoft
MS-COCO (Lin et al., 2014), which uses the same im-
ages as Visual Genome. The lower count of objects
per category is a result of our higher number of cat-
egories. For a fairer comparison with ILSVRC 2014
Detection (Russakovsky et al., 2015), Visual Genome
has about 2239 objects per category when only the
top 200 categories are considered, which is compara-
ble to ILSVRC’s 2671.5 objects per category. For a
fairer comparison with MS-COCO, Visual Genome has
about 3768 objects per category when only the top 91

Fig. 21: Comparison of object diversity between various
datasets. Visual Genome far surpasses other datasets in
terms of number of object categories.

categories are considered. This is comparable to MS-
COCO’s (Lin et al., 2014) when we consider just the
108, 249 MS-COCO images in Visual Genome.

Objects in Visual Genome come from a variety of
categories. As shown in Figure 22 (b), objects related
to WordNet categories such as humans, animals, sports,
and scenery are most common; this is consistent with
the general bias in image subject matter in our dataset.
Common objects like man, person, and woman occur
especially frequently with occurrences of 24K, 17K, and
11K. Other objects that also occur in MS-COCO (Lin
et al., 2014) are also well represented with around 5000
instances on average. Figure 22 (a) shows some exam-
ples of objects in images. Objects in Visual Genome
span a diverse set of Wordnet categories like food, ani-
mals, and man-made structures.

It is important to look not only at what types of ob-
jects we have but also at the distribution of objects in
images and regions. Figure 20 (a) shows, as expected,
that we have between 0 and 2 objects in each region on
average. It is possible for regions to contain no objects
if their descriptions refer to no explicit objects in the
image. For example, a region described as “it is dark
outside” has no objects to extract. Regions with only
one object generally have descriptions that focus on the
attributes of a single object. On the other hand, regions
with two or more objects generally have descriptions
that contain both attributes of speciﬁc objects and re-
lationships between pairs of objects.

As shown in Figure 20 (b), each image contains on
average around 21 unique objects. Few images have a
low number of objects, which we expect since images
usually capture more than a few objects. Moreover, few
images have an extremely high number of objects (e.g.
over 40).

Visual Genome

Visual
Genome

ILSVRC Det.
(Russakovsky
et al., 2015)

MS-
COCO (Lin
et al., 2014)

Caltech101
(Fei-Fei et al.,
2007)

Caltech256
(Griﬃn et al.,
2007)

PASCAL Det.
(Everingham
et al., 2010)

23

Abstract
Scenes
(Zitnick and
Parikh, 2013)

Images
Total Objects
Total Categories
Objects per Category

108,249
255,718
18,136
14.10

476,688
534,309
200
2671.50

328,000
2,500,000
91
27472.50

9,144
9,144
102
90

30,608
30,608
257
119

11,530
27,450
20
1372.50

10,020
58
11
5.27

Table 3: Comparison of Visual Genome objects and categories to related datasets.

(a)

(b)

Fig. 22: (a) Examples of objects in Visual Genome. Each object is localized in its image with a tightly drawn
bounding box. (b) Plot of the most frequently occurring objects in images. People are the most frequently occurring
objects in our dataset, followed by common objects and visual elements like building, shirt, and sky.

Street LightGlassBenchPizzaStop LightBirdBuildingBearPlaneTruck24

5.4 Attribute Statistics

Attributes allow for detailed description and disam-
biguation of objects in our dataset. About 45% of ob-
jects in Visual Genome are annotated with at least
one attribute; our dataset contains 1.6 million total at-
tributes with 13, 041 unique attributes. Attributes in-
clude colors (green), sizes (tall), continuous action
verbs (standing), materials (plastic), etc. Each at-
tribute in our scene graphs belongs to one object, while
each object can have multiple attributes. We denote
attributes as attribute(object).

On average, each image in Visual Genome con-
tains 21 attributes, as shown in Figure 23. Each re-
gion contains on average 1 attribute, though about 42%
of regions contain no attribute at all; this is primar-
ily because many regions are relationship-focused. Fig-
ure 24 (a) shows the distribution of the most com-
mon attributes in our dataset. Colors (e.g. white,
green) are by far the most frequent attributes.
Also common are sizes (e.g. large) and materials
(e.g. wooden). Figure 24 (b) shows the distribution
of attributes describing people (e.g. man, girls, and
person). The most common attributes describing peo-
ple are intransitive verbs describing their states of
motion (e.g.standing and walking). Certain sports
(skiing, surfboarding) are overrepresented due to
a bias towards these sports in our images.

Attribute Graphs. We also qualitatively analyze the at-
tributes in our dataset by constructing co-occurrence
graphs, in which nodes are unique attributes and edges
connect those attributes that describe the same ob-
ject. For example,
if an image contained a “large
black dog” (large(dog), black(dog)) and another
image contained a “large yellow cat” (large(cat),
yellow(cat)), its attributes would form an incom-
plete graph with edges (large, black) and (large,
yellow). We create two such graphs: one for both the
total set of attributes and a second where we consider
only objects that refer to people. A subgraph of the
16 most frequently connected (co-occurring) person-
related attributes is shown in Figure 25 (a).

Cliques in these graphs represent groups of at-
tributes in which at least one co-occurrence exists for
each pair of attributes in that group. In the previous
example, if a third image contained a “black and yel-
low taxi” (black(taxi), yellow(taxi)), the result-
ing third edge would create a clique between the at-
tributes black, large, and yellow. When calculated
across the entire Visual Genome dataset, these cliques
provide insight into commonly perceived traits of dif-
ferent types of objects. Figure 25 (b) is a selected rep-
resentation of three example cliques and their overlaps.

Ranjay Krishna et al.

(a)

(b)

(c)

Fig. 23: Distribution of the number of attributes (a) per
image, (b) per region description, (c) per object.

From just a clique of attributes, we can predict what
types of objects are usually referenced. In Figure 25
(b), we see that these cliques describe an animal (left),
water body (top right), and human hair (bottom right).
Other cliques (not shown) can also uniquely iden-
tify objects. In our set, one clique contains athletic,
young, fit, skateboarding, focused, teenager,
male, skinny, and happy, capturing some of the
common traits of skateboarders in our set. An-
other such clique has shiny, small, metal, silver,
rusty, parked, and empty, most likely describing a
subset of cars. From these cliques, we can thus infer
distinct objects and object types based solely on their
attributes, potentially allowing for highly speciﬁc ob-
ject identiﬁcation based on selected characteristics.

Visual Genome

25

(a)

(b)

Fig. 24: (a) Distribution showing the most common attributes in the dataset. Colors (white, red) and materials
(wooden, metal) are the most common. (b) Distribution showing the number of attributes describing people.
State-of-motion verbs (standing, walking) are the most common, while certain sports (skiing, surfing)
are also highly represented due to an image source bias in our image set.

26

Ranjay Krishna et al.

(a)

(b)

Fig. 25: (a) Graph of the person-describing attributes with the most co-occurrences. Edge thickness represents the
frequency of co-occurrence of the two nodes. (b) A subgraph showing the co-occurrences and intersections of three
cliques, which appear to describe water (top right), hair (bottom right), and some type of animal (left). Edges
between cliques have been removed for clarity.

Visual Genome

5.5 Relationship Statistics

Relationships are the core components that link objects
in our scene graphs. Relationships are directional, i.e.
they involve two objects, one acting as the subject and
one as the object of a predicate relationship. We de-
note all relationships in the form relationship(subject,
object). For example, if a man is swinging a bat, we
write swinging(man, bat). Relationships can be spatial
(e.g. inside of), action (e.g. swinging), composi-
tional (e.g. part of), etc. More complex relationships
such as standing on, which includes both an action
and a spatial aspect, are also represented. Relationships
are extracted from region descriptions by crowd work-
ers, similarly to attributes and objects. Visual Genome
contains a total of 13, 894 unique relationships, with
over 1.8 million total relationships.

Figure 26 (a) shows the distribution of relationships
per region description. On average, we have 1 relation-
ship per region, with a maximum of 7. We also have
some descriptions like “an old, tall man,” which have
multiple attributes associated with the man but no rela-
tionships. Figure 26 (b) is a distribution of relationships
per image object. Finally, Figure 26 (c) shows the dis-
tribution of relationships per image. Each image has an
average of 19 relationships, with a minimum of 1 rela-
tionship and with ax maximum of over 60 relationships.

Top relationship distributions. We display the most fre-
quently occurring relationships in Figure 27 (a). on
is the most common relationship in our dataset. This
is primarily because of the ﬂexibility of the word on,
which can refer to spatial conﬁguration (on top of),
attachment (hanging on), etc. Other common rela-
tionships involve actions like holding and wearing
and spatial conﬁgurations like behind, next to, and
under. Figure 27 (b) shows a similar distribution
but for relationships involving people. Here we notice
more human-centric relationships or actions such as
kissing, chatting with, and talking to. The
two distributions follow a Zipf distribution.

Understanding aﬀordances. Relationships allow us to
also understand the aﬀordances of objects. We show
this using a speciﬁc distribution of subjects and ob-
jects involved in the relationship riding in Figure 28.
Figure 28 (a) shows the distribution for subjects while
Figure 28 (b) shows a similar distribution for objects.
Comparing the two distributions, we ﬁnd clear pat-
terns of people-like subject entities such as person,
man, policeman, boy, and skateboarder that
can ride other objects; the other distribution contains
objects that aﬀord riding, such as horse, bike,
elephant, motorcycle, and skateboard. We can

27

(a)

(b)

(c)

Fig. 26: Distribution of relationships (a) per image re-
gion, (b) per image object, (c) per image.

also learn speciﬁc common-sense knowledge, like that
skateboarders only ride skateboards and only
surfers ride waves or surfboards.

Related work comparison. It is also worth mentioning in
this section some prior work on relationships. The con-
cept of visual relationships has already been explored
in Visual Phrases (Sadeghi and Farhadi, 2011), who
introduced a dataset of 17 such relationships such as
next to(person, bike) and riding(person, horse). How-
ever, their dataset is limited to just these 17 rela-
tionships. Similarly, the MS-COCO-a dataset (Ruggero
Ronchi and Perona, 2015) introduced 140 actions that
humans performed in MS-COCO’s dataset (Lin et al.,
2014). However, their dataset is limited to just ac-
tions, while our relationships are more general and nu-
merous, with over 13K unique relationships. Finally,
VisKE (Sadeghi et al., 2015) introduced 6500 relation-
ships, but in a much smaller dataset of images than
Visual Genome.

28

Ranjay Krishna et al.

(a)

(b)

Fig. 27: (a) A sample of the most frequent relationships in our dataset. In general, the most common relationships
are spatial (on top of, on side of, etc.). (b) A sample of the most frequent relationships involving humans
in our dataset. The relationships involving people tend to be more action oriented (walk, speak, run, etc.).

Objects Attributes Relationships

5.6 Region and Scene Graph Statistics

Region Graph 0.43
21.26
Scene Graph

0.41
16.21

0.45
18.67

Table 4: The average number of objects, attributes, and
relationships per region graph and per scene graph.

We introduce in this paper the largest dataset of scene
graphs to date. We use these graph representations of
images as a deeper understanding of the visual world. In
this section, we analyze the properties of these represen-
tations, both at the region level through region graphs
and at the image level through scene graphs. We also

Visual Genome

29

(a)

(b)

Fig. 28: (a) Distribution of subjects for the relationship riding. (b) Distribution of objects for the relationship
riding. Subjects comprise of people-like entities like person, man, policeman, boy, and skateboarder that
can ride other objects. On the other hand, objects like horse, bike, elephant and motorcycle are entities
that can aﬀord riding.

brieﬂy explore other datasets with scene graphs and
provide aggregate statistics on our entire dataset.

Scene graphs by asking humans to write triples
about an image (Johnson et al., 2015). However, unlike
them, we collect graphs at a much more ﬁne-grained
level, the region graph. We obtained our graphs by ask-
ing workers to create them from the descriptions we
collected from our regions. Therefore, we end up with

multiple graphs for an image, one for every region de-
scription. Together, we can combine all the individual
region graphs to aggregate a scene graph for an image.
This scene graph is made up of all the individual region
graphs. In our scene graph representation, we merge all
the objects that referenced by multiple region graphs
into one node in the scene graph.

30

Ranjay Krishna et al.

Fig. 29: Example QA pairs in the Visual Genome dataset. Our QA pairs cover a spectrum of visual tasks from
recognition to high-level reasoning.

Each of our images has a distribution between 40
to 50 region graphs per image, with an average of 42.
Each image has exactly one scene graph. Note that the
number of region descriptions and the number of region
graphs for an image are not the same. For example,
consider the description “it is a sunny day”. Such a
description contains no objects, which are the building
blocks of a region graph. Therefore, such descriptions
have no region graphs associated with them.

Objects, attributes, and relationships occur as a
normal distribution in our data. Table 4 shows that in a
region graph, there are an average of 0.43 objects, 0.41
attributes, and 0.45 relationships. Each scene graph and
consequently each image has average of 21.26 objects,
16.21 attributes, and 18.67 relationships.

5.7 Question Answering Statistics

We collected 1, 773, 258 question answering (QA) pairs
on the Visual Genome images. Each pair consists of a
question and its correct answer regarding the content
of an image. On average, every image has 17 QA pairs.
Rather than collecting unconstrained QA pairs as pre-
vious work has done (Antol et al., 2015, Gao et al.,
2015, Malinowski and Fritz, 2014), each question in Vi-
sual Genome starts with one of the six Ws – what,
where, when, who, why, and how. There are two ma-
jor beneﬁts to focusing on six types of questions. First,
they oﬀer a considerable coverage of question types,

ranging from basic perceptual tasks (e.g. recognizing
objects and scenes) to complex common sense reason-
ing (e.g. inferring motivations of people and causality of
events). Second, these categories present a natural and
consistent stratiﬁcation of task diﬃculty, indicated by
the baseline performance in Section 6.4. For instance,
why questions that involve complex reasoning lead to
the poorest performance (3.4% top-100 accuracy) of the
six categories. This enables us to obtain a better un-
derstanding of the strengths and weaknesses of today’s
computer vision models, which sheds light on future
directions in which to proceed.

We now analyze the diversity and quality of our
questions and answers. Our goal is to construct a large-
scale visual question answering dataset that covers a
diverse range of question types, from basic cognition
tasks to complex reasoning tasks. We demonstrate the
richness and diversity of our QA pairs by examining the
distributions of questions and answers in Figure 29.

Question type distributions. The questions naturally
fall into the 6W categories via their interrogative words.
Inside each of the categories, the second and following
words categorize the questions with increasing granu-
larity. Inspired by VQA (Antol et al., 2015), we show
the distributions of the questions by their ﬁrst three
words in Figure 30. We can see that “what” is the
most common of the six categories. A notable diﬀer-
ence between our question distribution and VQA’s is
that we focus on ensuring that all 7 question categories

Visual Genome

31

Fig. 30: Distribution of question types by starting
words. This ﬁgure shows the distribution of the ques-
tions by their ﬁrst three words. The angles of the re-
gions are proportional to the number of pairs from the
corresponding categories. We can see that “what” ques-
tions are the largest category with nearly half of the QA
pairs.

are adequately represented, while in VQA, 32.37% of
the questions are yes/no binary questions. As a result,
a trivial model can achieve a reasonable performance by
just predicting “yes” or “no” as answers. We encourage
more diﬃcult QA pairs by ruling out binary questions.

Question and answer length distributions. We also an-
alyze the question and answer lengths of each 6W cat-
egory. Figure 31 shows the average question and an-
swer lengths of each category. Overall, the average ques-
tion and answer lengths are 5.7 and 1.8 words respec-
tively. In contrast to the VQA dataset, where .88%,
8.38%, and 3.25% of the answers consist of one, two,
or three words, our answers exhibit a long-tail distri-
bution where 57.3%, 18.1%, and 15.7% of the answers
have one, two, or three words respectively. We avoid
verbosity by instructing the workers to write answers
as concisely as possible. The coverage of long answers
means that many answers contain a short description
that contains more details than merely an object or
an attribute. It shows the richness and complexity of
our visual QA tasks beyond object-centric recognition
tasks. We foresee that these long-tail questions can mo-

Fig. 31: Question and answer lengths by question type.
The bars show the average question and answer lengths
of each question type. The whiskers show the stan-
dard deviations. The factual questions, such as “what”
and “how” questions, usually come with short answers
of a single object or a number. This is only because
“how” questions are disproportionately counting ques-
tions that start with “how many”. Questions from the
“where” and “why” categories usually have phrases and
sentences as answers.

tivate future research in common-sense reasoning and
high-level image understanding.

5.8 Canonicalization Statistics

In order to reduce the ambiguity in the concepts of
our dataset and connect it to other resources used by
the research community, we canonicalize the semantic
meanings of all objects, relationships, and attributes in
Visual Genome. By “canonicalization,” we refer to word
sense disambiguation (WSD) by mapping the compo-
nents in our dataset to their respective synsets in the
WordNet ontology (Miller, 1995). This mapping re-
duces the noise in the concepts contained in the dataset
and also facilitates the linkage between Visual Genome
and other data sources such as ImageNet (Deng et al.,
2009), which is built on top of the WordNet ontology.
Figure 32 shows an example image from the Visual
Genome dataset with its components canonicalized.
For example, horse is canonicalized as horse.n.01:
solid-hoofed herbivorous quadruped
domesticated since prehistoric times.
Its
attribute, clydesdale, is canonicalized as its breed
clydesdale.n.01: heavy feathered-legged
breed of draft horse originally from
Scotland. We also show an example of a QA from

7/9/2015v6w_total_sunburst.svgfile://localhost/Users/yuke.zhu/Downloads/v6w_total_sunburst.svg1/1whatkindofaretheisintheoncolorareiswhoisinwheniswasthisthehowmanypeopleisthewhereisthisthearethewasthisthewhyistheare32

Ranjay Krishna et al.

Fig. 32: An example image from the Visual Genome dataset with its region descriptions, QA, objects, attributes,
and relationships canonicalized. The large text boxes are WordNet synsets referenced by this image. For exam-
ple, the carriage is mapped to carriage.n.02: a vehicle with wheels drawn by one or more
horses. We do not show the bounding boxes for the objects in order to allow readers to see the image clearly.
We also only show a subset of the scene graph for this image to avoid cluttering the ﬁgure.

which we extract the nouns shamrocks, symbol, and
St. Patrick’s day, all of which we canonicalize
to WordNet as well.

Related work. Canonicalization, or WSD (Pal and
Saha, 2015), has been used in numerous applications,
including machine translation,
information retrieval,
and information extraction (Rothe and Sch¨utze, 2015,
Leacock et al., 1998). In English sentences, sentences
like “He scored a goal” and “It was his goal in life”
carry diﬀerent meanings for the word “goal.” Under-
standing these diﬀerences is crucial for translating lan-
guages and for returning correct results for a query.
Similarly, in Visual Genome, we ensure that all our
components are canonicalized to understand how dif-
ferent objects are related to each other; for example,
“person” is a hypernym of “man” and “woman.” Most
past canonicalization models use precision, recall, and
F1 score to evaluate on the Semeval dataset (Mihalcea
et al., 2004). The current state-of-the-art performance
on Semeval is an F1 score of 75.8% (Chen et al., 2014).
Since our canonicalization setup is diﬀerent from the
Semeval benchmark (we have an open vocabulary and
no annotated ground truth for evaluation), our canon-
icalization method is not directly comparable to these
existing methods. We do however, achieve a similar pre-
cision and recall score on a held-out test set described
below.

Region descriptions and QAs. We canonicalize all ob-
jects mentioned in all region descriptions and QA pairs.

Precision Recall

Objects
Attributes
Relationships

88.0
85.7
92.9

98.5
95.9
88.5

Table 5: Precision, recall, and mapping accuracy per-
centages for object, attribute, and relationship canoni-
calization.

Because objects need to be extracted from the phrase
text, we use Stanford NLP tools (Manning et al., 2014)
to extract the noun phrases in each region description
and QA, resulting in 99% recall of noun phrases from
a subset of 200 region descriptions we manually anno-
tated. After obtaining the noun phrases, we map each to
its most frequent matching synset (according to Word-
Net lexeme counts). This resulted in an overall mapping
accuracy of 86% and a recall of 98.5%. The most com-
mon synsets extracted from region descriptions, QAs,
and objects are shown in Figure 33.

Attributes. We canonicalize attributes from the crowd-
extracted attributes present in our scene graphs. The
“attribute” designation encompasses a wide range of
grammatical parts of speech. Because part-of-speech
taggers rely on high-level syntax information and thus
fail on the disjoint elements of our scene graphs, we
normalize each attribute based on morphology alone
(so-called “stemming”). Then, as with objects, we map
each attribute phrase to the most frequent matching
WordNet synset. We include 15 hand-mapped rules to

IMG-ID: 150370horseclydesdalepullsLegend: objectattributerelationshipcarriagegreencarriage.n.02a vehicle with wheels drawn by one or more horseshorse.n.01solid-hoofed herbivorous quadruped domesticated since prehistoric timesclydesdale.n.01heavy feathered-legged breed of draft horse originally from Scotlandmanpassengerman.n.01an adult person who is male (as opposed to a woman)passenger.n.01a traveler riding in a vehicle who is not operating itinriding inperson.n.01a human beingmapped synsetderived synsetQ: What are the shamrocks doing there?A: They are a symbol of St. Patrick’s day.hop_clover.n.02clover native to Ireland with yellowish flowerssymbol.n.01an arbitrary sign that has acquired a conventional significancest_patrick's_day.n.01a day observed by the Irish to commemorate the patron saint of IrelandQA pairextracted NPis derived hyponym ofride.v.02be carried or travel on or in a vehiclegreen.a.01of the color between blue and yellow in the color spectrumtravel.v.01change location; move, travel, or proceedVisual Genome

33

address common failure cases in which WordNet’s fre-
quency counts prefer abstract senses of words over the
spatial senses present in visual data, e.g. “short.a.01:
limited in duration” over short.a.02: lacking
in length. For veriﬁcation, we randomly sample 200
attributes, produce ground-truth mappings by hand,
and compare them to the results of our algorithm. This
resulted in a recall of 95.9% and a mapping accuracy of
83.5%. The most common attribute synsets are shown
in Figure 34 (a).

Relationships. As with attributes, we canonicalize the
relationships isolated in our scene graphs. We ex-
clude prepositions, which are not recognized in Word-
Net, leaving a set primarily composed of verb rela-
tionships. Since the meanings of verbs are highly de-
pendent upon their morphology and syntactic place-
ment (e.g. passive cases, prepositional phrases), we
map the structure of each relationship to the ap-
propriate WordNet sentence frame and only consider
those WordNet synsets with matching sentence frames.
For each verb-synset pair, we then consider the root
hypernym of that synset to reduce potential noise
from WordNet’s ﬁne-grained sense distinctions. We also
include 20 hand-mapped rules, again to correct for
WordNet’s lower representation of concrete or spatial
senses; for example, the concrete hold.v.02: have
or hold in one’s hand or grip is less frequent
in WordNet than the abstract hold.v.01: cause
to continue in a certain state. For veriﬁca-
tion, we again randomly sample 200 relationships and
compare the results of our canonicalization against
ground-truth mappings. This resulted in a recall of
88.5% and a mapping accuracy of 77.6%. While sev-
eral datasets, such as VerbNet (Schuler, 2005) and
FrameNet (Baker et al., 1998), include semantic re-
strictions or frames to improve classiﬁcation, there is
no comprehensive method of mapping to those restric-
tions or frames. The most common relationship synsets
are shown in Figure 34 (b).

6 Experiments

Thus far, we have presented the Visual Genome dataset
and analyzed its individual components. With such rich
information provided, numerous perceptual and cogni-
tive tasks can be tackled. In this section, we aim to pro-
vide baseline experimental results using components of
Visual Genome that have not been extensively studied.
Object detection is already a well-studied problem (Ev-
eringham et al., 2010, Girshick et al., 2014, Sermanet
et al., 2013, Girshick, 2015, Ren et al., 2015b). Simi-
larly, region graphs and scene graphs have been shown

to improve semantic image retrieval (Johnson et al.,
2015, Schuster et al., 2015). We therefore focus on the
remaining components, i.e. attributes, relationships, re-
gion descriptions, and question answer pairs.

In Section 6.1, we present results for two experi-
ments on attribute prediction. In the ﬁrst, we treat at-
tributes independently from objects and train a classi-
ﬁer for each attribute, i.e. a classiﬁer for red or a clas-
siﬁer for old, as in (Malisiewicz et al., 2008, Varma and
Zisserman, 2005, Ferrari and Zisserman, 2007, Farhadi
et al., 2009, Johnson et al., 2015). In the second exper-
iment, we learn object and attribute classiﬁers jointly
and predict object-attribute pairs (e.g. predicting that
an apple is red), as in (Sadeghi and Farhadi, 2011).
In Section 6.2, we present two experiments on rela-
tionship prediction. In the ﬁrst, we aim to predict the
predicate between two objects, e.g. predicting the pred-
icate kicking or wearing between two objects. This
experiment is synonymous with existing work in action
recognition (Gupta et al., 2009, Ramanathan et al.,
2015). In another experiment, we study relationships
by classifying jointly the objects and the predicate (e.g.
predicting kicking(man, ball )); we show that this is a
very diﬃcult task due to the high variability in the ap-
pearance of a relationship (e.g. the ball might be on
the ground or in mid-air above the man). These ex-
periment are generalizations of tasks that study spatial
relationships between objects and ones that jointly rea-
son about the interaction of humans with objects (Yao
and Fei-Fei, 2010, Prest et al., 2012).

In Section 6.3 we present results for region cap-
tioning. This task is closely related to image caption-
ing (Chen et al., 2015); however, results from the two
are not directly comparable, as region descriptions are
short, incomplete sentences. We train one of the top 16
state-of-the-art image caption generator (Karpathy and
Fei-Fei, 2014) on (1) our dataset to generate region de-
scriptions and on (2) Flickr30K (Young et al., 2014) to
generate sentence descriptions. To compare results be-
tween the two training approaches, we use simple tem-
plates to convert region descriptions into complete sen-
tences. For a more robust evaluation, we validate the
descriptions we generate using human judgment.

Finally,

in Section 6.4, we experiment on visual
question answering, i.e. given an image and a question,
we attempt to provide an answer for the question. We
report results on the retrieval of the correct answer from
a list of existing answers.

6.1 Attribute Prediction

Attributes are becoming increasingly important in the
ﬁeld of computer vision, as they oﬀer higher-level

34

Ranjay Krishna et al.

(a)

(b)

Fig. 33: Distribution of the 25 most common synsets mapped from (a) region descriptions and question answers
and (b) objects.

semantic cues for various problems and lead to a
deeper understanding of images. We can express a
wide variety of properties through attributes, such as
form (sliced), function (decorative), sentiment
(angry), and even intention (helping). Distinguish-
ing between similar objects (Isola et al., 2015) leads
to ﬁner-grained classiﬁcation, while describing a pre-
viously unseen class through attributes shared with
known classes can enable “zero-shot” learning (Farhadi

et al., 2009, Lampert et al., 2009). Visual Genome is
the largest dataset of attributes, with 18 attributes per
image for a total of 1.8 million attributes.

Setup. For both experiments, we focus on the 100 most
common attributes in our dataset. We only use objects
that occur at least 100 times and are associated with
one of the 100 attributes in at least one image. For both
experiments, we follow a similar data pre-processing

Visual Genome

35

(a)

(b)

Fig. 34: Distribution of the 25 most common synsets mapped from (a) attributes and (b) relationships.

pipeline. First, we lowercase, lemmatize, and strip ex-
cess whitespace from all attributes. Since the number of
examples per attribute class varies, we randomly sam-
ple 500 attributes from each category (if fewer than 500
are in the class, we take all of them).

We end up with around 50, 000 attribute instances
and 43, 000 object-attribute pair instances in total.
We use 80% of the images for training and 10% each

for validation and testing. Because each image has
about the same number of examples, this results in an
approximately 80%-10%-10% split over the attributes
themselves. The input data for this experiment is the
cropped bounding box of the object associated with
each attribute.

We train an attribute predictor by using features
learned from a convolutional neural network. Speciﬁ-

36

Ranjay Krishna et al.

(a)

(b)

Fig. 35: (a) Example predictions from the attribute prediction experiment. Attributes in the ﬁrst row are predicted
correctly, those in the second row diﬀer from the ground truth but still correctly classify an attribute in the image,
and those in the third row are classiﬁed incorrectly. The model tends to associate objects with attributes (e.g.
elephant with grazing). (b) Example predictions from the joint object-attribute prediction experiment.

cally, we ﬁne-tune a 16-layer VGG network (Simonyan
and Zisserman, 2014) for both of these experiments us-
ing the 50, 000 attribute and 43, 000 object-attribute
pair instances respectively. We modify the network so
that the learning rate of the ﬁnal fully-connected layer
is 10 times that of the other layers, as this improves
convergence time. We use a base learning rate of 0.001,
which we scale by 0.1 every 200 iterations, and momen-
tum and weight decays of 0.9 and 0.0005 respectively.
We use the ﬁne-tuned features from the network and
train 100 individual SVMs (Hearst et al., 1998) to pre-
dict each attribute. We output multiple attributes for
each bounding box input. For the second experiment,
we also output the object class.

Results. Table 6 shows results for both experiments.
For the ﬁrst experiment on attribute prediction, we
converge after around 700 iterations with 18.97% top-
one accuracy and 43.11% top-ﬁve accuracy. Thus, at-
tributes (like objects) are visually distinguishable from
each other. For the second experiment where we also
predict the object class, we converge after around 400
iterations with 43.17% top-one accuracy and 71.97%
top-ﬁve accuracy. Predicting objects jointly with at-
tributes increases the top-one accuracy from 18.97% to

43.17%. This implies that some attributes occur exclu-
sively with a small number of objects. Additionally, by
jointly learning attributes with objects, we increase the
inter-class variance, making the classiﬁcation process
an easier task.

Figure 35 (a) shows example predictions for the ﬁrst
attribute prediction experiment. In general, the model
is good at associating objects with their most salient
attributes, for example, animal with stuffed and
elephant with grazing. However, there is some dif-
ference between the user-provided result and the correct
ground truth, so the model incorrectly classiﬁes some
correct predictions. For example, the white stuﬀed an-
imal is correct but evaluated as incorrect.

Figure 35 (b) shows example predictions for the sec-
ond experiment in which we also predict the object.
While the results in the second row might be considered
correct, to keep a consistent evaluation, we mark them
as incorrect. For example, the predicted “green grass”
might be considered subjectively correct even though
it is annotated as “brown grass”. For cases where the
objects are not clearly visible but are abstract outlines,
our model is unable to predict attributes or objects ac-
curately. For example, it thinks that the “ﬂying bird”
is actually a “black jacket”.

“playing” (predicted “grazing”)“beautiful” (predicted “concrete”)“metal” (predicted “closed”)“dark” (predicted “dark”)“parked” (predicted “parked”)“white” (predicted “stuffed”)“green leaves” (predicted “white snow”)“flying bird” (predicted “black jacket”)“brown grass” (predicted “green grass”)“red bus” (predicted “red bus”)“skiing person” (predicted “skiing person”)“white stripe” (predicted “black and white zebra”)Visual Genome

37

Top-1 Accuracy Top-5 Accuracy

Top-1 Accuracy Top-5 Accuracy

Attribute
Object-Attribute

18.97%
43.17%

43.11%
71.97%

Relationship
Sub./Rel./Obj.

8.74%
25.83%

26.69%
65.57%

Table 6: (First row) Results for the attribute prediction
task where we only predict attributes for a given image
crop. (Second row) Attribute-object prediction exper-
iment where we predict both the attributes as well as
the object from a given crop of the image.

The attribute clique graphs in Section 5.4 clearly
show that learning attributes can help us identify types
of objects. This experiment strengthens that insight.
We learn that studying attributes together with objects
can improve attribute prediction.

6.2 Relationship Prediction

While objects are the core building blocks of an image,
relationships put them in context. These relationships
help distinguish between images that contain the same
objects but have diﬀerent holistic interpretations. For
example, an image of “a man riding a bike” and “a
man falling oﬀ a bike” both contain man and bike, but
the relationship (riding vs. falling off) changes
how we perceive both situations. Visual Genome is the
largest known dataset of relationships, with a total of
1.8 million relationships and an average of 18 relation-
ships per image.

Setup. The setups of both experiments are similar to
those of the experiments we performed on attributes.
We again focus on the top 100 most frequent relation-
ships. We lowercase, lemmatize, and strip excess whites-
pace from all relationships. We end up with around
34, 000 relationships and 27, 000 subject-relationship-
object triples for training, validation, and testing. The
input data to the experiment is the image region con-
taining the union of the bounding boxes of the subject
and object (essentially, the bounding box containing the
two object boxes). We ﬁne-tune a 16-layer VGG net-
work (Simonyan and Zisserman, 2014) with the same
learning rates mentioned in Section 6.1.

Results. Overall, we ﬁnd that relationships are not vi-
sually distinct enough for our discriminative model to
learn eﬀectively. Table 7 shows results for both experi-
ments. For relationship classiﬁcation, we converge after
around 800 iterations with 8.74% top-one accuracy and
29.69% top-ﬁve accuracy. Unlike attribute prediction,
the accuracy results for relationships are much lower

Table 7: Results for relationship classiﬁcation (ﬁrst row)
and joint classiﬁcation (second row) experiments.

because of the high intra-class variability of most re-
lationships. For the second experiment jointly predict-
ing the relationship and its two object classes, we con-
verge after around 450 iterations with 25.83% top-one
accuracy and 65.57% top-ﬁve accuracy. We notice that
object classiﬁcation aids relationship prediction. Some
relationships occur with some objects and never others;
for example, the relationship drive only occurs with
the object person and never with any other objects
(dog, chair, etc.).

Figure 36 (a) shows example predictions for the rela-
tionship classiﬁcation experiment. In general, the model
associates object categories with certain relationships
(e.g. animals with eating or drinking, bikes with
riding, and kids with playing).

Figure 36 (b), structured as in Figure 36 (a), shows
example predictions for the joint prediction of relation-
ships with its objects. The model is able to predict the
salient features of the image (e.g. “boat in water”) but
fails to distinguish between diﬀerent objects (e.g. boy
vs. woman and car vs. bus in the bottom row).

6.3 Generating Region Descriptions

Generating sentence descriptions of images has gained
popularity as a task in computer vision (Kiros et al.,
2014, Mao et al., 2014, Karpathy and Fei-Fei, 2014,
Vinyals et al., 2014); however, current state-of-the-art
models fail to describe all the diﬀerent events captured
in an image and instead provide only a high-level sum-
mary of the image. In this section, we test how well
state-of-the-art models can caption the details of im-
ages. For both experiments, we use the NeuralTalk
model (Karpathy and Fei-Fei, 2014), since it not only
provides state-of-the-art results but also is shown to
be robust enough for predicting short descriptions. We
train NeuralTalk on the Visual Genome dataset for re-
gion descriptions and on Flickr30K (Young et al., 2014)
for full sentence descriptions. As a model trained on
other datasets would generate complete sentences and
would not be comparable (Chen et al., 2015) to our
region descriptions, we convert all region descriptions
generated by our model into complete sentences using
predeﬁned templates (Hou et al., 2002).

38

Ranjay Krishna et al.

(a)

(b)

Fig. 36: (a) Example predictions from the relationship prediction experiment. Relationships in the ﬁrst row are
predicted correctly, those in the second row diﬀer from the ground truth but still correctly classify a relation-
ship in the image, and those in the third row are classiﬁed incorrectly. The model learns to associate animals
leaning towards the ground as eating or drinking and bikes with riding. (b) Example predictions from the
relationship-objects prediction experiment. The ﬁgure is organized in the same way as Figure (a). The model is
able to predict the salient features of the image but fails to distinguish between diﬀerent objects (e.g. boy and
woman and car and bus in the bottom row).

Setup. For training, we begin by preprocessing region
descriptions; we remove all non-alphanumeric charac-
ters and lowercase and strip excess whitespace from
them. We have 4, 158, 841 region descriptions in total.
We end up with 3, 150, 000 region descriptions for train-
ing – 504, 420 each for validation and testing. Note that
we ensure descriptions of regions from the same image
are exclusively in the training, validation, or testing set.
We feed the bounding boxes of the regions through the
pretrained VGG 16-layer network (Simonyan and Zis-
serman, 2014) to get the 4096-dimensional feature vec-
tors of each region. We then use the NeuralTalk (Karpa-
thy and Fei-Fei, 2014) model to train a long short-term
memory (LSTM) network (Hochreiter and Schmidhu-
ber, 1997) to generate descriptions of regions. We use a
learning rate of 0.001 trained with rmsprop (Dauphin
et al., 2015). The model converges after four days.

For testing, we crop the ground-truth region bound-
ing boxes of images and extract their 4096-dimensional
16-layer VGG network (Simonyan and Zisserman, 2014)
features. We then feed these vectors through the pre-
trained NeuralTalk model to get predictions for region
descriptions.

Results. Table 8 shows the results for the experi-
ment. We calculate BLEU, CIDEr, and METEOR
scores (Chen et al., 2015) between the generated de-
scriptions and their ground-truth descriptions. In all
cases, the model trained on VisualGenome performs
better. Moreover, we asked crowd workers to evaluate
whether a generated description was correct—we got
1.6% and 43.03% for models trained on Flickr30K and
on Visual Genome, respectively. The large increase in
accuracy when the model trained on our data is due to
the speciﬁcity of our dataset. Our region descriptions
are shorter and cover a smaller image area. In com-
parison, the Flickr30K data are generic descriptions of
entire images with multiple events happening in diﬀer-
ent regions of the image. The model trained on our data
is able to make predictions that are more likely to con-
centrate on the speciﬁc part of the image it is looking
at, instead of generating a summary description. The
objectively low accuracy in both cases illustrates that
current models are unable to reason about complex im-
ages.

Figure 37 shows examples of regions and their pre-
dicted descriptions. Since many examples have short

Dog “carrying” frisbee (predicted: “laying on”)Boy “playing” soccer (predicted “playing”)Sheep “eating” grass (predicted “eating”)Bike “attached to” rack (predicted “riding”)Bag “inside” rickshaw (predicted “riding”)Shadow “from” zebra (predicted “drinking”)“glass on table” (predicted “plate on table”)“car on road” (predicted “bus on street”)“train on tracks” (predicted “train on tracks”)“leaf on tree” (predicted “building in background”)“boat in water” (predicted “boat in water”)“boy has hair” (predicted “woman wearing glasses”)Visual Genome

39

top-100 top-500 top-1000

What
Where
When
Who
Why
How

0.420
0.096
0.714
0.355
0.034
0.780

0.602
0.324
0.809
0.493
0.118
0.827

0.672
0.418
0.834
0.605
0.187
0.846

Overall 0.411

0.573

0.641

Table 9: Baseline QA performances (in accuracy).

models that can answer a myriad of visual questions.
While we encourage the construction of smart models,
in this paper, we provide some baseline metrics to help
others compare their models.

Setup. We split the QA pairs into a training set (60%)
and a test set (40%). We ensure that all images are
exclusive to either the training set or the test set. We
implement a simple baseline model that relies on an-
swer frequency. The model counts the top k most fre-
quent answers (similar to the ImageNet challenge (Rus-
sakovsky et al., 2015)) in the training set as the pre-
dictions for all the test questions, where k = 100,
500, and 1000. We let a model make k diﬀerent pre-
dictions. We say the model is correct on a QA if one
of the k predictions matches exactly with the ground-
truth answer. We report the accuracy over all test ques-
tions. This evaluation method works well when the
answers are short, especially for single-word answers.
However, it causes problems when the answers are long
phrases and sentences. Other evaluation methods re-
quire word ontologies (Malinowski and Fritz, 2014),
multiple choices (Antol et al., 2015, Yu et al., 2015),
or human judges (Gao et al., 2015).

Fig. 37: Example predictions from the region descrip-
tion generation experiment. Regions in the ﬁrst column
(left) accurately describe the region, and those in the
second column (right) are incorrect and unrelated to
the corresponding region.

descriptions, the predicted descriptions are also short
as expected; however, this causes the model to fail to
produce more descriptive phrases for regions with mul-
tiple objects or with distinctive objects (i.e. objects
with many attributes). While we use templates to con-
vert region descriptions into sentences, future work can
explore smarter approaches to combine region descrip-
tions and generate a paragraph connecting all the re-
gions into one coherent description.

6.4 Question Answering

Visual Genome is currently the largest dataset of vi-
sual question answers with 1.7 million question and
answer pairs. Each of our 108, 249 images contains an
average of 17 question answer pairs. Answering ques-
tions requires a deeper understanding of an image than
generic image captioning. Question answering can in-
volve ﬁne-grained recognition (e.g. “What is the breed
of the dog?”), object detection (e.g. “Where is the kite
in the image?”), activity recognition (e.g. “What is this
man doing?”), knowledge base reasoning (e.g. “Is this
glass full?”), and common-sense reasoning (e.g. “What
street will we be on if we turn right?”).

By leveraging the detailed annotations in the scene
graphs in Visual Genome, we envision building smart

Results. Table 9 shows the performance of the open-
ended visual question answering task. These base-
line results imply the long-tail distribution of the an-
swers. Long-tail distribution is common in existing QA
datasets as well (Antol et al., 2015, Malinowski and
Fritz, 2014). The top 100, 500, and 1000 most frequent
answers only cover 41.1%, 57.3%, and 64.1% of the cor-
rect answers. In comparison, the corresponding sets of
frequent answers in VQA (Antol et al., 2015) cover 63%,
75%, and 80% of the test set answers. The “where” and
“why” questions, which tend to involve spatial and com-
mon sense reasoning, tend to have more diverse answers
and hence perform poorly, with performances of 0.096%
and 0.024% top-100 respectively. The top 1000 frequent
answers cover only 41.8% and 18.7% of the correct an-
swers from these two question types respectively.

“a black motorcycle”“trees in background”“train is visible”“the umbrella is red”“black and white cow”“a kite in the sky”40

Ranjay Krishna et al.

BLEU-1 BLEU-2 BLEU-3 BLEU-4 CIDEr METEOR Human

Flickr8K 0.09
0.17
VG

0.01
0.05

0.002
0.02

0.0004
0.01

0.05
0.30

0.04
0.09

1.6%
43.03%

Table 8: Results for the region description generation experiment. Scores in the ﬁrst row are for the region de-
scriptions generated from the NeuralTalk model trained on Flickr8K, and those in the second row are for those
generated by the model trained on Visual Genome data. BLEU, CIDEr, and METEOR scores all compare the
predicted description to a ground truth in diﬀerent ways.

7 Future Applications

We have analyzed the individual components of this
dataset and presented experiments with baseline results
for tasks such as attribute classiﬁcation, relationship
classiﬁcation, description generation, and question an-
swering. There are, however, more applications and ex-
periments for which our dataset can be used. In this
section, we note a few potential applications that our
dataset can enable.

Dense image captioning. We have seen numerous im-
age captioning papers (Kiros et al., 2014, Mao et al.,
2014, Karpathy and Fei-Fei, 2014, Vinyals et al., 2014)
that attempt to describe an entire image with a single
caption. However, these captions do not exhaustively
describe every part of the scene. An natural extension
to this application, which the Visual Genome dataset
enables, is the ability to create dense captioning models
that describe parts of the scene.

Visual question answering. While visual question an-
swering has been studied as a standalone task (Yu et al.,
2015, Ren et al., 2015a, Antol et al., 2015, Gao et al.,
2015), we introduce a dataset that combines all of our
question answers with descriptions and scene graphs.
Future work can build supervised models that utilize
various components of Visual Genome to tackle ques-
tion answering.

Image understanding. While we have seen a surge of
image captioning (Kiros et al., 2014) and question an-
swering (Antol et al., 2015) models, there has been little
work on creating more comprehensive evaluation met-
rics to measure how well these models are performing.
Such models are usually evaluated using BLEU, CIDEr,
or METEOR and other similar metrics that do not ef-
fectively measure how well these models understand the
image (Chen et al., 2015). The Visual Genome scene
graphs can be used as a measurement for image under-
standing. Generated descriptions and answers can be
matched against the ground truth scene graph of an
image to evaluate its corresponding model.

Relationship extraction. Relationship extraction has
been extensively studied in information retrieval
and natural language processing (Zhou et al., 2007,
GuoDong et al., 2005, Culotta and Sorensen, 2004,
Socher et al., 2012). Visual Genome is the ﬁrst large-
scale visual relationship dataset. This dataset can be
used to study the extraction of visual relationships
(Sadeghi et al., 2015) from images, and its interactions
between objects can also be used to study action recog-
nition (Yao and Fei-Fei, 2010, Ramanathan et al., 2015)
and spatial orientation between objects (Gupta et al.,
2009, Prest et al., 2012).

Semantic image retrieval. Previous work has already
shown that scene graphs can be used to improve se-
mantic image search (Johnson et al., 2015, Schuster
et al., 2015). Further methods can be explored using
our region descriptions combined with region graphs.
Attention-based search methods can also be explored
where the area of interest speciﬁed by a query is also
localized in the retrieved images.

8 Conclusion

Visual Genome provides a multi-layered understanding
of pictures. It allows for a multi-perspective study of
an image, from pixel-level information like objects, to
relationships that require further inference, and to even
deeper cognitive tasks like question answering. It is a
comprehensive dataset for training and benchmarking
the next generation of computer vision models. With
Visual Genome, we expect these models to develop
a broader understanding of our visual world, comple-
menting computers’ capacities to detect objects with
abilities to describe those objects and explain their in-
teractions and relationships. Visual Genome is a large
formalized knowledge representation for visual under-
standing and a more complete set of descriptions and
question answers that grounds visual concepts to lan-
guage.

Visual Genome

41

Acknowledgements We would like to start by thanking
our sponsors: Stanford Computer Science Department, Ya-
hoo Labs!, The Brown Institute for Media Innovation, Toyota
and Adobe. Next, we specially thank Michael Stark, Yutian
Li, Frederic Ren, Sherman Leung, Michelle Guo and Gavin
Mai for their contributions. We thank Carsten Rother from
the University of Dresden for facilitating Oliver Groth’s in-
volvement. We also thank all the thousands of crowd workers
for their diligent contribution to Visual Genome. Finally, we
thank all members of the Stanford Vision Lab and HCI Lab
for their useful comments and discussions.

References

Antol et al., 2015. Antol, S., Agrawal, A., Lu, J., Mitchell,
M., Batra, D., Zitnick, C. L., and Parikh, D. (2015).
Vqa: Visual question answering.
arXiv preprint
arXiv:1505.00468.

Baker et al., 1998. Baker, C. F., Fillmore, C. J., and Lowe,
J. B. (1998). The berkeley framenet project. In Proceedings
of the 36th Annual Meeting of the Association for Compu-
tational Linguistics and 17th International Conference on
Computational Linguistics - Volume 1, ACL ’98, pages 86–
90, Stroudsburg, PA, USA. Association for Computational
Linguistics.

Betteridge et al., 2009. Betteridge, J., Carlson, A., Hong,
S. A., Hruschka Jr, E. R., Law, E. L., Mitchell, T. M., and
Wang, S. H. (2009). Toward never ending language learn-
ing. In AAAI Spring Symposium: Learning by Reading and
Learning to Read, pages 1–2.

Bruner, 1990. Bruner, J. (1990). Culture and human devel-
opment: A new look. Human development, 33(6):344–355.
Bunescu and Mooney, 2005. Bunescu, R. C. and Mooney,
R. J. (2005). A shortest path dependency kernel for re-
lation extraction. In Proceedings of the conference on Hu-
man Language Technology and Empirical Methods in Nat-
ural Language Processing, pages 724–731. Association for
Computational Linguistics.

Chang et al., 2014. Chang, A. X., Savva, M., and Manning,
C. D. (2014). Semantic parsing for text to 3d scene gener-
ation. ACL 2014, page 17.

Chen et al., 2015. Chen, X., Fang, H., Lin, T.-Y., Vedantam,
R., Gupta, S., Dollar, P., and Zitnick, C. L. (2015). Mi-
crosoft coco captions: Data collection and evaluation server.
arXiv preprint arXiv:1504.00325.

Chen et al., 2014. Chen, X., Liu, Z., and Sun, M. (2014).
A uniﬁed model for word sense representation and disam-
biguation. In EMNLP, pages 1025–1035. Citeseer.

Chen et al., 2013. Chen, X., Shrivastava, A., and Gupta, A.
(2013). Neil: Extracting visual knowledge from web data. In
Computer Vision (ICCV), 2013 IEEE International Con-
ference on, pages 1409–1416. IEEE.

Choi et al., 2013. Choi, W., Chao, Y.-W., Pantofaru, C., and
Savarese, S. (2013). Understanding indoor scenes using 3d
geometric phrases. In Computer Vision and Pattern Recog-
nition (CVPR), 2013 IEEE Conference on, pages 33–40.
IEEE.

Culotta and Sorensen, 2004. Culotta, A. and Sorensen, J.
(2004). Dependency tree kernels for relation extraction.
In Proceedings of the 42nd Annual Meeting on Association
for Computational Linguistics, page 423. Association for
Computational Linguistics.

Dauphin et al., 2015. Dauphin, Y. N., de Vries, H., Chung,
J., and Bengio, Y. (2015). Rmsprop and equilibrated adap-
tive learning rates for non-convex optimization.
arXiv
preprint arXiv:1502.04390.

Deng et al., 2009. Deng, J., Dong, W., Socher, R., Li, L.-J.,
Li, K., and Fei-Fei, L. (2009). Imagenet: A large-scale hi-
erarchical image database. In Computer Vision and Pat-
tern Recognition, 2009. CVPR 2009. IEEE Conference on,
pages 248–255. IEEE.

Dollar et al., 2012. Dollar, P., Wojek, C., Schiele, B., and
Perona, P. (2012). Pedestrian detection: An evaluation of
the state of the art. Pattern Analysis and Machine Intelli-
gence, IEEE Transactions on, 34(4):743–761.

Everingham et al., 2010. Everingham, M., Van Gool, L.,
Williams, C. K., Winn, J., and Zisserman, A. (2010). The
pascal visual object classes (voc) challenge. International
journal of computer vision, 88(2):303–338.

Farhadi et al., 2009. Farhadi, A., Endres, I., Hoiem, D., and
Forsyth, D. (2009). Describing objects by their attributes.
In Computer Vision and Pattern Recognition, 2009. CVPR
2009. IEEE Conference on, pages 1778–1785. IEEE.

Farhadi et al., 2010. Farhadi, A., Hejrati, M., Sadeghi,
M. A., Young, P., Rashtchian, C., Hockenmaier, J., and
Forsyth, D. (2010). Every picture tells a story: Generating
sentences from images. In Computer Vision–ECCV 2010,
pages 15–29. Springer.

Fei-Fei et al., 2007. Fei-Fei, L., Fergus, R., and Perona, P.
(2007). Learning generative visual models from few train-
ing examples: An incremental bayesian approach tested on
101 object categories. Computer Vision and Image Under-
standing, 106(1):59–70.

Ferrari and Zisserman, 2007. Ferrari, V. and Zisserman, A.
(2007). Learning visual attributes. In Advances in Neural
Information Processing Systems, pages 433–440.

Ferrucci et al., 2010. Ferrucci, D., Brown, E., Chu-Carroll,
J., Fan, J., Gondek, D., Kalyanpur, A. A., Lally, A., Mur-
dock, J. W., Nyberg, E., Prager, J., et al. (2010). Building
watson: An overview of the deepqa project. AI magazine,
31(3):59–79.

Firestone and Scholl, 2015. Firestone, C. and Scholl, B. J.
(2015). Cognition does not aﬀect perception: Evaluating
the evidence for top-down eﬀects. Behavioral and brain
sciences, pages 1–72.

Forbus, 1984. Forbus, K. D. (1984). Qualitative process the-

ory. Artiﬁcial intelligence, 24(1):85–168.

Gao et al., 2015. Gao, H., Mao, J., Zhou, J., Huang, Z.,
Wang, L., and Xu, W. (2015). Are you talking to a ma-
chine? dataset and methods for multilingual image question
answering. arXiv preprint arXiv:1505.05612.

Geman et al., 2015. Geman, D., Geman, S., Hallonquist, N.,
and Younes, L. (2015). Visual turing test for computer
vision systems. Proceedings of the National Academy of
Sciences, 112(12):3618–3623.

Girshick, 2015. Girshick, R. (2015).

Fast r-cnn.

arXiv

preprint arXiv:1504.08083.

Girshick et al., 2014. Girshick, R., Donahue, J., Darrell, T.,
and Malik, J. (2014). Rich feature hierarchies for accurate
object detection and semantic segmentation. In Computer
Vision and Pattern Recognition (CVPR), 2014 IEEE Con-
ference on, pages 580–587. IEEE.

Goering et al., 2014. Goering, C., Rodner, E., Freytag, A.,
and Denzler, J. (2014). Nonparametric part transfer for
ﬁne-grained recognition. In Computer Vision and Pattern
Recognition (CVPR), 2014 IEEE Conference on, pages
2489–2496. IEEE.

Griﬃn et al., 2007. Griﬃn, G., Holub, A., and Perona, P.

(2007). Caltech-256 object category dataset.

GuoDong et al., 2005. GuoDong, Z., Jian, S., Jie, Z., and
Min, Z. (2005). Exploring various knowledge in relation
extraction. In Proceedings of the 43rd annual meeting on

42

Ranjay Krishna et al.

association for computational linguistics, pages 427–434.
Association for Computational Linguistics.

Gupta and Davis, 2008. Gupta, A. and Davis, L. S. (2008).
Beyond nouns: Exploiting prepositions and comparative ad-
jectives for learning visual classiﬁers. In Computer Vision–
ECCV 2008, pages 16–29. Springer.

Gupta et al., 2009. Gupta, A., Kembhavi, A., and Davis,
L. S. (2009). Observing human-object interactions: Using
spatial and functional compatibility for recognition. Pat-
tern Analysis and Machine Intelligence, IEEE Transac-
tions on, 31(10):1775–1789.

Hayes, 1978. Hayes, P. J. (1978). The naive physics man-
Institut pour les ´etudes s´emantiques et cogni-

ifesto.
tives/Universit´e de Gen`eve.

Hayes, 1985. Hayes, P. J. (1985). The second naive physics
manifesto. Theories of the Commonsense World, pages 1–
36.

Hearst et al., 1998. Hearst, M. A., Dumais, S. T., Osman,
E., Platt, J., and Scholkopf, B. (1998). Support vector ma-
chines. Intelligent Systems and their Applications, IEEE,
13(4):18–28.

Hochreiter and Schmidhuber, 1997. Hochreiter,

and
Schmidhuber, J. (1997). Long short-term memory. Neural
computation, 9(8):1735–1780.

S.

Hodosh et al., 2013. Hodosh, M., Young, P., and Hocken-
maier, J. (2013). Framing image description as a ranking
task: Data, models and evaluation metrics. J. Artif. Int.
Res., 47(1):853–899.

Hou et al., 2002. Hou, C.-S. J., Noy, N. F., and Musen, M. A.
(2002). A template-based approach toward acquisition of
logical sentences.
In Intelligent Information Processing,
pages 77–89. Springer.

Huang et al., 2008. Huang, G. B., Mattar, M., Berg, T., and
Learned-Miller, E. (2008). Labeled faces in the wild: A
database forstudying face recognition in unconstrained en-
vironments.
In Workshop on Faces in’Real-Life’Images:
Detection, Alignment, and Recognition.

Isola et al., 2015. Isola, P., Lim, J. J., and Adelson, E. H.
(2015). Discovering states and transformations in image col-
lections. In Proceedings of the IEEE Conference on Com-
puter Vision and Pattern Recognition, pages 1383–1391.
Izadinia et al., 2014. Izadinia, H., Sadeghi, F., and Farhadi,
Incorporating scene context and object lay-
A. (2014).
In Computer Vision and
out into appearance modeling.
Pattern Recognition (CVPR), 2014 IEEE Conference on,
pages 232–239. IEEE.

Johnson et al., 2015. Johnson, J., Krishna, R., Stark, M., Li,
L.-J., Shamma, D. A., Bernstein, M., and Fei-Fei, L. (2015).
Image retrieval using scene graphs. In IEEE Conference on
Computer Vision and Pattern Recognition (CVPR).

Karpathy and Fei-Fei, 2014. Karpathy, A. and Fei-Fei, L.
(2014). Deep visual-semantic alignments for generating im-
age descriptions. arXiv preprint arXiv:1412.2306.

Kiros et al., 2014. Kiros, R., Salakhutdinov, R., and Zemel,
R. (2014). Multimodal neural language models.
In Pro-
ceedings of the 31st International Conference on Machine
Learning (ICML-14), pages 595–603.

Krishna et al., 2016. Krishna, R., Hata, K., Chen, S.,
Kravitz, J., Shamma, D. A., Fei-Fei, L., and Bernstein,
M. S. (2016). Embracing error to enable rapid crowdsourc-
ing. In CHI’16-SIGCHI Conference on Human Factors in
Computing System.

Krizhevsky et al., 2012. Krizhevsky, A., Sutskever, I., and
Imagenet classiﬁcation with deep
Hinton, G. E. (2012).
convolutional neural networks. In Advances in neural in-
formation processing systems, pages 1097–1105.

Lampert et al., 2009. Lampert, C. H., Nickisch, H., and
Harmeling, S. (2009). Learning to detect unseen object
classes by between-class attribute transfer.
In Computer
Vision and Pattern Recognition, 2009. CVPR 2009. IEEE
Conference on, pages 951–958. IEEE.

Leacock et al., 1998. Leacock, C., Miller, G. A.,

and
Chodorow, M. (1998). Using corpus statistics and wordnet
relations for sense identiﬁcation. Computational Linguis-
tics, 24(1):147–165.

Lebret et al., 2015. Lebret, R., Pinheiro, P. O., and Col-
lobert, R. (2015). Phrase-based image captioning. arXiv
preprint arXiv:1502.03671.

Lin et al., 2014. Lin, T.-Y., Maire, M., Belongie, S., Hays,
J., Perona, P., Ramanan, D., Doll´ar, P., and Zitnick, C. L.
In
(2014). Microsoft coco: Common objects in context.
Computer Vision–ECCV 2014, pages 740–755. Springer.
Lu et al., 2016. Lu, C., Krishna, R., Bernstein, M. S., and
Fei-Fei, L. (2016). Visual relationship detection using lan-
guage priors.

Ma et al., 2015. Ma, L., Lu, Z., and Li, H. (2015). Learning
to answer questions from image using convolutional neural
network. arXiv preprint arXiv:1506.00333.

Malinowski and Fritz, 2014. Malinowski, M. and Fritz, M.
(2014). A multi-world approach to question answering
about real-world scenes based on uncertain input. In Ad-
vances in Neural Information Processing Systems, pages
1682–1690.

Malinowski et al., 2015. Malinowski, M., Rohrbach, M., and
Fritz, M. (2015). Ask your neurons: A neural-based ap-
proach to answering questions about images. arXiv preprint
arXiv:1505.01121.

Malisiewicz et al., 2008. Malisiewicz, T., Efros, A., et al.
Recognition by association via learning per-
(2008).
In Computer Vision and Pattern
exemplar distances.
Recognition, 2008. CVPR 2008. IEEE Conference on,
pages 1–8. IEEE.

Manning et al., 2014. Manning, C. D., Surdeanu, M., Bauer,
J., Finkel, J., Bethard, S. J., and McClosky, D. (2014). The
Stanford CoreNLP natural language processing toolkit. In
Proceedings of 52nd Annual Meeting of the Association for
Computational Linguistics: System Demonstrations, pages
55–60.

Mao et al., 2014. Mao, J., Xu, W., Yang, Y., Wang, J., and
Yuille, A. L. (2014). Explain images with multimodal re-
current neural networks. arXiv preprint arXiv:1410.1090.
Mihalcea et al., 2004. Mihalcea, R., Chklovski, T. A., and
Kilgarriﬀ, A. (2004). The senseval-3 english lexical sam-
ple task. Association for Computational Linguistics.

Mikolov et al., 2013. Mikolov, T., Chen, K., Corrado, G.,
and Dean, J. (2013). Eﬃcient estimation of word represen-
tations in vector space. arXiv preprint arXiv:1301.3781.
Miller, 1995. Miller, G. A. (1995). Wordnet: a lexical
the ACM,

Communications of

database for english.
38(11):39–41.

Nathan Silberman and Fergus, 2012. Nathan

Derek Hoiem, P. K. and Fergus, R. (2012).
mentation and support inference from rgbd images.
ECCV.

Silberman,
Indoor seg-
In

Niu et al., 2012. Niu, F., Zhang, C., R´e, C., and Shavlik, J.
(2012). Elementary: Large-scale knowledge-base construc-
tion via machine learning and statistical inference. Interna-
tional Journal on Semantic Web and Information Systems
(IJSWIS), 8(3):42–73.

Ordonez et al., 2011. Ordonez, V., Kulkarni, G., and Berg,
T. L. (2011). Im2text: Describing images using 1 million
In Shawe-Taylor, J., Zemel, R.,
captioned photographs.

Visual Genome

43

Bartlett, P., Pereira, F., and Weinberger, K., editors, Ad-
vances in Neural Information Processing Systems 24, pages
1143–1151. Curran Associates, Inc.

Pal and Saha, 2015. Pal, A. R. and Saha, D.

(2015).
arXiv preprint

Word sense disambiguation: a survey.
arXiv:1508.01346.

Papineni et al., 2002. Papineni, K., Roukos, S., Ward, T.,
and Zhu, W.-J. (2002). Bleu: a method for automatic evalu-
ation of machine translation. In Proceedings of the 40th an-
nual meeting on association for computational linguistics,
pages 311–318. Association for Computational Linguistics.
Patterson et al., 2014. Patterson, G., Xu, C., Su, H., and
Hays, J. (2014). The sun attribute database: Beyond cate-
gories for deeper scene understanding. International Jour-
nal of Computer Vision, 108(1-2):59–81.

Perronnin et al., 2010. Perronnin, F., S´anchez, J., and
Mensink, T. (2010). Improving the ﬁsher kernel for large-
scale image classiﬁcation.
In Computer Vision–ECCV
2010, pages 143–156. Springer.

Prest et al., 2012. Prest, A., Schmid, C., and Ferrari, V.
(2012). Weakly supervised learning of interactions between
humans and objects. Pattern Analysis and Machine Intel-
ligence, IEEE Transactions on, 34(3):601–614.

Ramanathan et al., 2015. Ramanathan, V., Li, C., Deng, J.,
Han, W., Li, Z., Gu, K., Song, Y., Bengio, S., Rossenberg,
C., and Fei-Fei, L. (2015). Learning semantic relationships
for better action retrieval in images. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recog-
nition, pages 1100–1109.

Ren et al., 2015a. Ren, M., Kiros, R., and Zemel, R. (2015a).
Image question answering: A visual semantic embedding
model and a new dataset. arXiv preprint arXiv:1505.02074.
Ren et al., 2015b. Ren, S., He, K., Girshick, R., and Sun,
J. (2015b). Faster r-cnn: Towards real-time object de-
tection with region proposal networks.
arXiv preprint
arXiv:1506.01497.

Rothe and Sch¨utze, 2015. Rothe, S. and Sch¨utze, H. (2015).
Autoextend: Extending word embeddings to embeddings
for synsets and lexemes. arXiv preprint arXiv:1507.01127.
Ruggero Ronchi and Perona, 2015. Ruggero Ronchi, M. and
Perona, P. (2015). Describing Common Human Visual Ac-
tions in Images. ArXiv e-prints.

Russakovsky et al., 2015. Russakovsky, O., Deng, J., Su, H.,
Krause, J., Satheesh, S., Ma, S., Huang, Z., Karpathy, A.,
Khosla, A., Bernstein, M., Berg, A. C., and Fei-Fei, L.
(2015).
ImageNet Large Scale Visual Recognition Chal-
lenge. International Journal of Computer Vision (IJCV),
pages 1–42.

Russell et al., 2008. Russell, B. C., Torralba, A., Murphy,
K. P., and Freeman, W. T. (2008). Labelme: a database
and web-based tool for image annotation.
International
journal of computer vision, 77(1-3):157–173.

Sadeghi et al., 2015. Sadeghi, F., Divvala, S. K., and
Farhadi, A. (2015). Viske: Visual knowledge extraction and
question answering by visual veriﬁcation of relation phrases.
In Proceedings of the IEEE Conference on Computer Vi-
sion and Pattern Recognition, pages 1456–1464.

Sadeghi and Farhadi, 2011. Sadeghi, M. A. and Farhadi, A.
(2011). Recognition using visual phrases. In Computer Vi-
sion and Pattern Recognition (CVPR), 2011 IEEE Con-
ference on, pages 1745–1752. IEEE.

Salehi et al., 2015. Salehi, N., Irani, L. C., and Bernstein,
M. S. (2015). We are dynamo: Overcoming stalling and fric-
tion in collective action for crowd workers. In Proceedings
of the 33rd Annual ACM Conference on Human Factors in
Computing Systems, pages 1621–1630. ACM.

Schank and Abelson, 2013. Schank, R. C. and Abelson, R. P.
(2013). Scripts, plans, goals, and understanding: An in-
quiry into human knowledge structures. Psychology Press.
Schuler, 2005. Schuler, K. K. (2005). Verbnet: A Broad-
PhD thesis,

coverage, Comprehensive Verb Lexicon.
Philadelphia, PA, USA. AAI3179808.

Schuster et al., 2015. Schuster, S., Krishna, R., Chang, A.,
Fei-Fei, L., and Manning, C. D. (2015). Generating seman-
tically precise scene graphs from textual descriptions for
improved image retrieval.

Sermanet et al., 2013. Sermanet, P., Eigen, D., Zhang, X.,
Mathieu, M., Fergus, R., and LeCun, Y. (2013). Overfeat:
Integrated recognition,
localization and detection using
convolutional networks. arXiv preprint arXiv:1312.6229.
Simonyan and Zisserman, 2014. Simonyan, K. and Zisser-
man, A. (2014). Very deep convolutional networks for large-
scale image recognition. arXiv preprint arXiv:1409.1556.
Snow et al., 2008. Snow, R., O’Connor, B., Jurafsky, D., and
Ng, A. Y. (2008). Cheap and fast—but is it good?: eval-
uating non-expert annotations for natural language tasks.
In Proceedings of the conference on empirical methods in
natural language processing, pages 254–263. Association for
Computational Linguistics.

Socher et al., 2012. Socher, R., Huval, B., Manning, C. D.,
and Ng, A. Y. (2012). Semantic compositionality through
recursive matrix-vector spaces. In Proceedings of the 2012
Joint Conference on Empirical Methods in Natural Lan-
guage Processing and Computational Natural Language
Learning, pages 1201–1211. Association for Computational
Linguistics.

Szegedy et al., 2014. Szegedy, C., Liu, W., Jia, Y., Sermanet,
P., Reed, S., Anguelov, D., Erhan, D., Vanhoucke, V., and
Rabinovich, A. (2014). Going deeper with convolutions.
arXiv preprint arXiv:1409.4842.

Thomee et al., 2016. Thomee, B., Shamma, D. A., Friedland,
G., Elizalde, B., Ni, K., Poland, D., Borth, D., and Li, L.-J.
(2016). Yfcc100m: The new data in multimedia research.
Commun. ACM, 59(2):64–73.

Torralba et al., 2008. Torralba, A., Fergus, R., and Freeman,
W. T. (2008). 80 million tiny images: A large data set
for nonparametric object and scene recognition. Pattern
Analysis and Machine Intelligence, IEEE Transactions on,
30(11):1958–1970.

Varma and Zisserman, 2005. Varma, M. and Zisserman, A.
(2005). A statistical approach to texture classiﬁcation from
single images. International Journal of Computer Vision,
62(1-2):61–81.

Vinyals et al., 2014. Vinyals, O., Toshev, A., Bengio, S., and
Erhan, D. (2014). Show and tell: A neural image caption
generator. arXiv preprint arXiv:1411.4555.

Wah et al., 2011. Wah, C., Branson, S., Welinder, P., Per-
ona, P., and Belongie, S. (2011). The caltech-ucsd birds-
200-2011 dataset.

Xiao et al., 2010. Xiao, J., Hays, J., Ehinger, K., Oliva, A.,
Torralba, A., et al. (2010). Sun database: Large-scale scene
recognition from abbey to zoo. In Computer vision and pat-
tern recognition (CVPR), 2010 IEEE conference on, pages
3485–3492. IEEE.

Xu et al., 2015. Xu, K., Ba, J., Kiros, R., Cho, K., Courville,
A. C., Salakhutdinov, R., Zemel, R. S., and Bengio, Y.
(2015). Show, attend and tell: Neural image caption gener-
ation with visual attention. CoRR, abs/1502.03044.

Yao and Fei-Fei, 2010. Yao, B. and Fei-Fei, L. (2010). Mod-
eling mutual context of object and human pose in human-
In Computer Vision and
object interaction activities.
Pattern Recognition (CVPR), 2010 IEEE Conference on,
pages 17–24. IEEE.

44

Ranjay Krishna et al.

Yao et al., 2007. Yao, B., Yang, X., and Zhu, S.-C. (2007).
Introduction to a large-scale general purpose ground truth
database: methodology, annotation tool and benchmarks.
In Energy Minimization Methods in Computer Vision and
Pattern Recognition, pages 169–183. Springer.

Young et al., 2014. Young, P., Lai, A., Hodosh, M., and
Hockenmaier, J. (2014). From image descriptions to visual
denotations: New similarity metrics for semantic inference
over event descriptions. Transactions of the Association for
Computational Linguistics, 2:67–78.

Yu et al., 2015. Yu, L., Park, E., Berg, A. C., and Berg, T. L.
(2015). Visual Madlibs: Fill in the blank Image Generation
and Question Answering. arXiv preprint arXiv:1506.00278.
Zeng et al., 2014. Zeng, D., Liu, K., Lai, S., Zhou, G., and
Zhao, J. (2014). Relation classiﬁcation via convolutional
deep neural network.
In Proceedings of COLING, pages
2335–2344.

Zhou et al., 2007. Zhou, G., Zhang, M., Ji, D. H., and
Zhu, Q. (2007). Tree kernel-based relation extraction
with context-sensitive structured parse tree information.
EMNLP-CoNLL 2007, page 728.

Zhu et al., 2009. Zhu, J., Nie, Z., Liu, X., Zhang, B., and
Wen, J.-R. (2009). Statsnowball: a statistical approach to
extracting entity relationships. In Proceedings of the 18th
international conference on World wide web, pages 101–
110. ACM.

Zhu et al., 2014. Zhu, Y., Fathi, A., and Fei-Fei, L. (2014).
Reasoning about Object Aﬀordances in a Knowledge Base
Representation. In European Conference on Computer Vi-
sion.

Zhu et al., 2015. Zhu, Y., Zhang, C., R´e, C., and Fei-Fei, L.
(2015). Building a Large-scale Multimodal Knowledge Base
System for Answering Visual Queries.
In arXiv preprint
arXiv:1507.05670.

Zitnick and Parikh, 2013. Zitnick, C. L. and Parikh, D.
(2013). Bringing semantics into focus using visual ab-
straction.
In Computer Vision and Pattern Recognition
(CVPR), 2013 IEEE Conference on, pages 3009–3016.
IEEE.

